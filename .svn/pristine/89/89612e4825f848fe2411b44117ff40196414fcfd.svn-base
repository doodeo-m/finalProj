package kr.or.ddit.patient.service;

import java.util.List;

import javax.inject.Inject;

import kr.or.ddit.vo.ReceiptionVO;
import lombok.extern.slf4j.Slf4j;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import kr.or.ddit.guardian.dao.GuardianDAO;
import kr.or.ddit.patient.dao.PatientDAO;
import kr.or.ddit.preDiagnosis.dao.PreDiagnosisDAO;
import kr.or.ddit.vo.PatientVO;

@Slf4j
@Service
public class PatientServiceImpl implements PatientService {

	@Autowired
	private PatientDAO patientDAO;

	@Inject
	private PreDiagnosisDAO diagnosisDAO;

	@Inject
	private GuardianDAO guardianDAO;

	// 0503 문수정-------------------------------------------------------
	/**
	 * 환자 목록 조회
	 */
	@Override
	public List<PatientVO> retrievePatientList() {
		return patientDAO.selectPatientList();

	}

	// 0504 문수정-------------------------------------------------------
	/**
	 * 환자 상세 조회
	 */
	@Override
	public PatientVO retrievePatient(String patientKey) {

		return patientDAO.selectPatient(patientKey);
	}

	// 0503 문수정-------------------------------------------------------
	/**
	 * 신규 환자 등록 환자 insert 후 보호자, 예진표 insert도 같이
	 */
	@Transactional
	@Override
	public int createPatient(PatientVO patient) {
		patientDAO.insertPatient(patient);
		diagnosisDAO.insertPreDiagnosis(patient.getPatientKey());
		return guardianDAO.insertGuardian(patient.getPatientKey());

	}

	// 0504 문수정-------------------------------------------------------
	/**
	 * 환자 정보 수정
	 */
	@Override
	public int modifyPatient(PatientVO patient) {
		return patientDAO.updatePatient(patient);
	}

	// 정민-------------------------------------------------------
	/**
	 * 접수 완료 후에 진료대기환자 조회하기
	 * 
	 * @return
	 */
	@Override
	public List<ReceiptionVO> selectReceipMember() {
		return patientDAO.selectReceipMember();
	}

	// 유림
	@Override
	public PatientVO retrievePatientDetail(String patientKey) {
		return patientDAO.selectPatientDetail(patientKey);
	}

	// 정민-------------------------------------------------------
	/**
	 * 수납을 하기 위해 대기중인 환자 목록 조회하기
	 */
	@Override
	public List<PatientVO> selectPayWaiting() {
		return patientDAO.selectPayWaiting();
	}

	// 정민 쿼리-------------------------------------------------------
	/**
	 * 수납이 완료된 환자들 진료확인서를 출력하기 위해 만든 쿼리
	 */
	@Override
	public List<PatientVO> completePayment() {
		return patientDAO.completePayment();
	}

	
	// 정민 쿼리-------------------------------------------------------
	/**
	 * 진료가 완료되고 진료확인서를 출력하기 위한 쿼리
	 */
	@Override
	public List<PatientVO> selectMedicalCertificate(String patientKey) {
		return patientDAO.selectMedicalCertificate(patientKey);
	}

}
