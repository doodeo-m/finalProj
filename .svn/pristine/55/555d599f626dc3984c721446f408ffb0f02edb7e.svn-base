<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>
	<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>

		<style type="text/css">
			.datatr:hover {
				background-color: #C1D3BA;
			}

			.datatr.active {
				background-color: #9AEDE3;
			}

			.grid-stack {
				height: 100hv;
			}

			#serchKeyWord {
				width: 150px;
				display: inline;
			}

			.rtBtn {
				float: right;
			}

			.pNum {
				width: 30px;
			}

			.nav-tabs .nav-link.active {
				background-color: #405189;
				color: white;
			}

			#medicineTBtitle {
				margin-bottom: 0;
			}

			#preDiagnosisInsertButton {
				background-color: #3C486B;
				color: white;
			}

			#prediagnosisViewbutton {
				background-color: #F1F6F9;
			}

			.form-control {
				font-size: small;
			}

			/*******************************************/
			/*                정민 CSS 시작              */
			input::placeholder {
				color: #d9d9d9;
			}

			.dust-class {
				/* input 박스 크기조절 */
				width: 250px;
				position: relative;
				margin-left: 10px;
				margin-top: 10px;
			}

			.dust-class label {
				/* 태그 안에 라벨 넣기 */
				display: inline-block;
				position: absolute;
				top: -5px;
				left: 14px;
				padding: 5px;
				background: white;
				font-size: 12px;
				color: #888;
			}

			.dust-class label span {
				/* 별표 색 지정 */
				color: #da4841;
				vertical-align: -1px;
			}

			.dust-class input {
				/*라벨과 인풋 합치기*/
				width: 100%;
				border: 1px solid #dddddd !important;
				font-size: 12px;
				line-height: 1.45;
				letter-spacing: -0.04rem;
				border-radius: 8px;
				padding: 16px;
				margin-top: 12px;
			}

			fieldset {
				display: flex;
				justify-content: center;
				border: none;
				margin-top: 20px;
			}

			/**************탭*************css*/
			#tabArea {
				position: relative;
				width: 100%;
				height: 100%;
				/*border: 3px solid rgb(32, 32, 238);*/
			}

			.tab {
				width: 100%;
				height: 100%;
				background-color: rgb(255, 255, 255);
				color: rgb(0, 0, 0);
				position: absolute;
			}

			.tabHead {
				font-size: 14px;
				margin-right: 50px;
				margin-left: 30px;
			}

			/*******************************************/
			/*                유림 CSS 시작              */
			.table {
				text-align: center;
				vertical-align: middle;
				font-size: 7px;
			}

			.table thead {
				background-color: #405189c7;
				color: white;
			}

			.searchPart {
				height: 30px;
				display: flex;
				justify-content: space-between;
				margin-bottom: 10px;
			}

			.searchPart>input {
				width: 60%;
			}
		</style>


		<div class="grid-stack">

			<!-- 환자 리스트 뜨는곳----------------------------------------------------------------------------------------->
			<div class="grid-stack-item" gs-x="0" gs-y="0" gs-w="3" gs-h="5">
				<div class="grid-stack-item-content">
					<div class="item-header">
						<h5>환자 목록</h5>
						<hr>
					</div>
					<div class="item-body">
						<div class="searchPart">
							<input type="text" id="patientSearchInput" class="form-control input-sm"
								placeholder="환자명/환자코드로 검색">
							<button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal"
								data-bs-target="#patientInsertModal">신환등록</button>
						</div>
						<table class="table table-bordered">
							<thead>
								<tr>
									<th>환자번호</th>
									<th>환자이름</th>
									<th>생년월일</th>
									<th>상세정보</th>
								</tr>
							</thead>
							<tbody id="patientListBody">

							</tbody>
						</table>
					</div>
				</div>
			</div>

			<!-- 접수 시작(정민) ---------------------------------------------------------------------------------------------------->
			<div class="grid-stack-item" gs-x="3" gs-y="0" gs-w="3" gs-h="3">
				<div class="grid-stack-item-content">
					<div class="item-header">
						<h5>접수</h5>
						<hr>
					</div>
					<div class="item-body">
						<div class="receiptPart">
							<div class="dust-class">
								<label for="itemname"><span>* </span>환자번호</label>
								<input type="text" class="receptId" id="jubsuPnum" readonly />
							</div>
							<div class="dust-class">
								<label for="itemname"><span>* </span>환자이름</label>
								<input type="text" class="receptName" id="jubsuPname" readonly />
							</div>
							<div class="dust-class">
								<label for="itemname"><span>* </span>내원이유/호소증상</label>
								<input type="text" class="receptReason" id="jubsuPPain" />
							</div>
							<fieldset>
								<label>
									<input type="radio" name="office" value="L001" checked />
									<span>1진료실</span>
								</label>
								<label>
									<input type="radio" name="office" value="L002" />
									<span>2진료실</span>
								</label>
								<label>
									<input type="radio" name="office" value="L003" />
									<span>3진료실</span>
								</label>
							</fieldset>
							<button onclick="fn_jubsu()" class="btn btn-primary" style="float : right;">접수</button>
						</div>
					</div>
				</div>
			</div>

			<!-- 진료 대기목록(정민) ---------------------------------------------------------------------------------------------->

			<div class="grid-stack-item" gs-x="3" gs-y="3" gs-w="3" gs-h="2">
				<div class="grid-stack-item-content">
					<div class="item-header">
						<h5>접수</h5>
						<a class="tabClass" href="#" onclick='fTab(this,0)'>1진료실</a>&nbsp;&nbsp;
						<a class="tabClass" href="#" onclick='fTab(this,1)'>2진료실</a>&nbsp;&nbsp;
						<a class="tabClass" href="#" onclick='fTab(this,2)'>3진료실</a>
						<hr>
						<!-- <div style="float: left;"> -->
						<!-- </div> -->
					</div>
					<div id="tabArea">
						<div id="tab1" class='tab' style='z-index: 999; overflow: scroll;'>
							<table class="table table-bordered" style="text-align: center;">
								<thead>
									<tr>
										<th>환자번호</th>
										<th>환자이름</th>
										<th>생년월일</th>
										<th>대기진료실</th>
									</tr>
								</thead>
								<tbody id="firstOffice">
								</tbody>
							</table>
						</div>
						<div id="tab2" class='tab' style='overflow: scroll;'>
							<table class="table table-bordered" style="text-align: center; ">
								<thead>
									<tr>
										<th>환자번호</th>
										<th>환자이름</th>
										<th>생년월일</th>
										<th>대기진료실</th>
									</tr>
								</thead>
								<tbody id="secondOffice">
								</tbody>
							</table>
						</div>
						<div id="tab3" class='tab' style='overflow: scroll;'>
							<table class="table table-bordered" style="text-align: center;">
								<thead>
									<tr>
										<th>환자번호</th>
										<th>환자이름</th>
										<th>생년월일</th>
										<th>대기진료실</th>
									</tr>
								</thead>
								<tbody id="thirdOffice">
								</tbody>
							</table>
						</div>
					</div>

				</div>
			</div>
		</div>


		<!-- <ul class="nav nav-tabs mb-3" role="officeList">
							<li class="nav-item">
								<a class="nav-link active" data-bs-toggle="tab" href="#office1" role="tab"
									aria-selected="false">
									1진료실</a>
							</li>
							<li class="nav-item">
								<a class="nav-link" data-bs-toggle="tab" href="#office2" role="tab"
									aria-selected="false">
									2진료실</a>
							</li>
							<li class="nav-item">
								<a class="nav-link" data-bs-toggle="tab" href="#office3" role="tab"
									aria-selected="false">
									3진료실
								</a>
							</li>
						</ul>

						<div class="tab-content  text-muted">
							<div class="tab-pane active" id="office1" role="tabpanel">
								진료실 1
							</div>
							<div class="tab-pane" id="office2" role="tabpanel">
								진료실 2
							</div>
							<div class="tab-pane" id="office3" role="tabpanel">
								진료실 3
							</div>
						</div> -->
		<!-- 모달 ----------------------------------------------------------------------------------------------------------------------->

		<!-- 신규 환자 등록 모달-->
		<div class="modal fade" id="patientInsertModal" tabindex="-1" aria-labelledby="exampleModalgrid1Label"
			aria-modal="true">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title" id="exampleModalgridLabel">신규 환자 등록</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body">
						<form id="patientInsertForm">
							<div class="row g-3">
								<div class="col-xxl-12">
									<div>
										<label for="patientName" class="form-label">이름</label>
										<input type="text" class="form-control" name="patientName" required>
									</div>
								</div>
								<div class="col-xxl-12">
									<div>
										<label for="patientRegno" class="form-label">주민등록번호</label>
										<input type="text" oninput="autoHyphen1(this)" class="form-control"
											name="patientRegno" maxlength='14' required>
									</div>
								</div>
								<div class="col-xxl-12">
									<div>
										<label for="patientPn" class="form-label">연락처</label>
										<input type="text" oninput="autoHyphen2(this)" class="form-control"
											name="patientPn" maxlength='13' required>
									</div>
								</div>
								<div class="col-xxl-12">
									<label for="patientAddress" class="form-label">주소</label>
									<input type="button" onclick="getAddressByAPI(this)" value="주소 검색"
										style="float: right;" class="btn btn-outline-primary btn-sm">
									<input class="form-control" type="text" name="patientAddress"
										style="margin-bottom: 4px;" placeholder="주소" readonly>
									<input class="form-control" type="text" name="patientAddressDetail"
										placeholder="상세주소">
								</div>
								<div class="col-xxl-12">
									<div>
										<label for="patientType" class="form-label">환자 유형</label>
										<select name="patientType" class="form-select">
											<option value="PK02">일반환자</option>
											<option value="PK03">관심환자</option>
											<option value="PK01">VIP</option>
										</select>
									</div>
								</div>
								<div class="col-xxl-12">
									<div>
										<label for="patientSignificant" class="form-label">특이사항</label>
										<input type="text" class="form-control" name="patientSignificant">
									</div>
								</div>
								<div class="col-lg-12">
									<div class="hstack gap-2 justify-content-end">
										<button type="submit" class="btn btn-primary">등록</button>
									</div>
								</div>
							</div>
						</form>
					</div>
				</div>
			</div>
		</div>
		</div>
		<!-- 신규 환자 등록 모달-->

		<!-- 모달 ----------------------------------------------------------------------------------------------------------------------->



		<script src="//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
		<script>
			// 그리드스택 생성
			var grid = GridStack.init({});

			// 환자 키 저장할 전역변수 설정
			let patientCode;

			// 현재 환자 전체 목록 데이터
			let patientList = null;

			// 신규 환자 모달 selected
			let patientInsertModal = $("#patientInsertModal");

			// 환자 상세보기에서 body부분 selected
			let patientDetailBody = $('.patientDetailBody');

			// 환자 목록 들어갈 tBody selected
			let patientListBody = $('#patientListBody').on('click', '.patientTr', function (event) {
				let data = $(this).data("patientInfo");
				fillReceipt(data);
			});


			// 환자 검색 input tag selected
			let patientSearchInput = $('#patientSearchInput').on('keyup', function () {
				let searchData = this.value;
				let data = [];

				$.each(patientList, function (idx, patient) {
					if (patient.patientKey.indexOf(searchData) != -1 || (patient.patientName.indexOf(searchData) != -1)) {
						data.push(patient);
					}
					mkPatientList(data);
				});
			})

			// 환자 전체 데이터 가져오는 함수 -------------------------------------------------------------------------------------------
			function getPatientList() {
				$.ajax({
					url: "${cPath}/patient/patientList.do"
					, method: "GET"
					, dataType: "json"
					, success: (resp) => {
						console.log("환자 목록 데이터 체킁 : ", resp);
						patientList = resp;
						mkPatientList(resp);
					}
				});
			}
			getPatientList();

			// 특정 데이터로 환자 리스트 만드는 함수 -------------------------------------------------------------------------------------------
			function mkPatientList(data) {
				patientListBody.empty();
				$.each(data, (idx, patient) => {
					let tr = $('<tr>').append(
						$('<td>').html(patient.patientKey)
						, $('<td>').html(patient.patientName)
						, $('<td>').html(patient.patientRegno1)
						, $('<td>').append(
							$('<button>').text("보기").addClass('btn btn-outline-primary btn-sm patientDetailBtn').attr(
								{
									"data-bs-toggle": "modal"
									, "data-bs-target": "#patientViewModal"
								}
							)
						)
					).addClass("patientTr").data("patientInfo", patient);
					patientListBody.append(tr);
				});
			}

			// selected input tags 목록 선택해서 오른쪽 접수로 데이터 옮기기
			let receptId = $('.receptId');
			let receptReason = $('.receptReason');
			let receptName = $('.receptName');

			// 접수 body selected
			let receiptPart = $('.receiptPart');

			// 환자 번호, 이름, 내원이유 selected
			let jubsuPnum = $('#jubsuPnum');
			let jubsuPname = $('#jubsuPname');
			let jubsuPPain = $('#jubsuPPain');

			function fillReceipt(data) {
				jubsuPnum.val(data.patientKey);
				jubsuPname.val(data.patientName);
			}


			const fn_jubsu = () => {
				let receiptVO = {
					patientKey: jubsuPnum.val(),
					officeKey: $('input[name="office"]:checked').val(),//셀렉트
					receiptReason: jubsuPPain.val()
				}
				$.ajax({
					type: "post",
					url: "${pageContext.request.contextPath}/insert/insertWaiting",
					contentType: 'application/json',
					data: JSON.stringify(receiptVO),
					dataType: "text",
					beforeSend: function (xhr) {   /*데이터를 전송하기 전에 헤더에 csrf값을 설정한다*/
						xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
					},
					success: function (rslt) {
						firstOffice.empty();
						secondOffice.empty();
						thirdOffice.empty();
						receiptList1();
						jubsuPnum.val("")
						jubsuPPain.val("")
						jubsuPname.val("")
					}
				})
			}

			// 환자 등록 insert 시작-----------------------------------------------------------------------------------------------------
			let patientInsertForm = $("#patientInsertForm").on('submit', function (event) {
				event.preventDefault();

				let formData = $(this).serializeArray();
				let vo = {};
				$.each(formData, function (index, field) {
					vo[field.name] = field.value;
				});

				let arr = vo.patientRegno.split('-');
				vo.patientRegno1 = arr[0];
				vo.patientRegno2 = arr[1];

				let year = new Date().getFullYear();
				let patientYear;
				if (vo.patientRegno2.substring(0, 1) == '1' || vo.patientRegno2.substring(0, 1) == '2') {
					patientYear = 1900 + parseInt(vo.patientRegno1.substring(0, 2));
				} else {
					patientYear = 2000 + parseInt(vo.patientRegno1.substring(0, 2));
				}
				vo.patientAge = year - patientYear;
				if (vo.patientRegno2.substring(0, 1) == '1' || vo.patientRegno2.substring(0, 1) == '3') {
					vo.patientSex = 'M';
				} else {
					vo.patientSex = 'F';
				}

				$.ajax({
					url: "${cPath}/patient/patientInsert.do",
					type: "post",
					contentType: 'application/json; charset=UTF-8',
					data: JSON.stringify(vo),
					beforeSend: function (xhr) {   /*데이터를 전송하기 전에 헤더에 csrf값을 설정한다*/
						xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
					},
					dataType: "text",
					success: function (resp) {
						if (resp == 'success') {
							patientInsertModal.modal('hide');
							getPatientList();
						}
					}
				})
				return false;
			});



			// 정민 area ------------------------------------------------------------------------------------------------------------------------------------------
			// ------------------------------------------------------------------------------------------------------------------------------------------------
			// ------------------------------------------------------------------------------------------------------------------------------------------------

			const myTabArea = document.querySelector("#tabArea");
			//const myTabs = document.querySelectorAll(".tab")
			const myTabs = myTabArea.children;
			const tabs = document.querySelectorAll(".tabClass");

			const tabInit = () => {
				for (let i = 0; i < myTabs.length; i++) {
					myTabs[i].style.zIndex = "1";
					tabs[i].style.borderTop = "";
				}
			}

			const fTab = (pThis, pIndex) => {
				tabInit();
				myTabs[pIndex].style.zIndex = "999";
				pThis.style.borderTop = "2px solid red";
				if (pIndex == 0) {
					firstOffice.show();
					secondOffice.hide();
					thirdOffice.hide();
				}
				if (pIndex == 1) {
					firstOffice.hide();
					secondOffice.show();
					thirdOffice.hide();
				}
				if (pIndex == 2) {
					firstOffice.hide();
					secondOffice.hide();
					thirdOffice.show();
				}
			}


			// 접수목록 불러오기
			const firstOffice = $("#firstOffice");
			const secondOffice = $("#secondOffice");
			const thirdOffice = $("#thirdOffice");
			const receiptList1 = () => {		// 접수목록 불러오는 함수
				$.ajax({
					type: "get",
					url: "${cPath}/patient/retrieveMember",
					dataType: "json",
					success: function (res) {
						console.log("대기환자목록 : ", res)
						let waitingTags = [];
						$.each(res, function (i, v) {
							let trs = $("<tr>").attr('class', v.officeKey).append(
								$("<td>").html(v.patientKey),	// 환자번호
								$("<td>").html(v.patientName),	// 환자이름
								$("<td>").html(v.patientRegno1),	// 생년월일
								$("<td>").html(v.officeKey)	// officeKey
							)
							if (v.officeKey == 'L001') {
								firstOffice.append(trs);
							}
							if (v.officeKey == 'L002') {
								secondOffice.append(trs);
							}
							if (v.officeKey == 'L003') {
								thirdOffice.append(trs);
							}
						})
					},
					error: function (req, status, error) {
						console.log("code", req.status)
						console.log("message", request.responseText)
						console.log("상태", error)
					}
				});
			}
			receiptList1();




			// ------------------------------------------------------------------------------------------------------------------------------------------------
			// ------------------------------------------------------------------------------------------------------------------------------------------------
			//---------------------------------------------------------------------------------------------------------------------------------------------------

		</script>