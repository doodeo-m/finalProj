package kr.or.ddit.noticeBoard.controller;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.noticeBoard.service.NoticeBoardService;
import kr.or.ddit.vo.NoticeBoardVO;
import kr.or.ddit.vo.Pagination;
import lombok.extern.slf4j.Slf4j;

@Controller
@RequestMapping
@Slf4j
public class NoticeBoardController {

	@Inject
	private NoticeBoardService noticeService;
	
	@PostMapping(value = "/noticeBoardList.do", produces = "application/json;charset=UTF-8")
	@ResponseBody
	public Pagination<NoticeBoardVO> boardList(@RequestParam(value = "page", required = false, defaultValue = "1")int currentPage) {
		Pagination<NoticeBoardVO> pagination = new Pagination<NoticeBoardVO>();
		pagination.setCurrentPage(currentPage);
		noticeService.noticeBoardList(pagination);
		return pagination;
	}
	
	@PostMapping(value = "/noticeBoardInsert.do", produces = "application/json;charset=UTF-8")
	@ResponseBody
	public String insertNoticeBoard(@RequestBody NoticeBoardVO noticeBoard) {
		log.debug("insert 조회 : {}", noticeBoard);
		noticeService.noticeBoardInsert(noticeBoard);
		return "success";
	}
	
	@GetMapping(value = "/noticeBoardDetail.do", produces = "application/json;charset=UTF-8")
	@ResponseBody
	public NoticeBoardVO noticeDetail(@RequestParam(value = "what") int boardKey, Model model) {
		
		log.debug("what 왔니 : {}", boardKey);
		
//		noticeService.noticeBoardCount(boardKey);
		NoticeBoardVO noticeBoard = new NoticeBoardVO();
		noticeBoard = noticeService.noticeBoardDetail(boardKey);
		
		log.debug("noticeBoard 왔니 : {}", noticeBoard);
		
		
		
		return noticeBoard;
	}
	
	@PostMapping(value = "/noticeBoardUpdate.do", produces = "application/json;charset=UTF-8")
	@ResponseBody
	public String updateNoticeBoard(@RequestBody NoticeBoardVO noticeBoard) {
		log.debug("update 조회 : {}", noticeBoard );
		
		noticeService.noticeBoardModify(noticeBoard);
		
		return "success";
	}
	
	@GetMapping(value = "/noticeBoardDelete.do", produces = "text/plain; charset=UTF-8")
	@ResponseBody
	public String removeNoticeBoard(@RequestParam("delBoardKey") int boardKey) {
		log.debug("delete boardkey 조회 : {}", boardKey );
		noticeService.noticeBoardRemove(boardKey);
		
		return "success";
	}
	
}
