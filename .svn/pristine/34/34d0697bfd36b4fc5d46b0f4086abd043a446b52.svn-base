<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.patient.dao.PatientDAO">
	<resultMap type="kr.or.ddit.vo.PatientVO" id="patientMap">
		
	</resultMap>
	

	<!-- 환자 목록 조회 셀렉트문 -->
	<select id="selectPatientList" resultType="kr.or.ddit.vo.PatientVO">

		SELECT
		    patient_key,  patient_name,   patient_age
		    ,   patient_sex,   patient_regno1,   patient_regno2
		    ,   patient_pn,   patient_address,   patient_address_detail
		    ,   patient_type,  patient_significant
		FROM
		    patient
		ORDER BY PATIENT_KEY DESC
	</select>
	
	<!-- 환자 상세 조회하는 셀렉트문 -->
	<select id="selectPatient" resultType="kr.or.ddit.vo.PatientVO" parameterType="string">
		SELECT PATIENT_KEY, PATIENT_NAME, PATIENT_AGE
				, PATIENT_SEX, PATIENT_REGNO1, PATIENT_REGNO2
				, PATIENT_PN, PATIENT_ADDRESS, PATIENT_ADDRESS_DETAIL
				, PATIENT_TYPE, PATIENT_SIGNIFICANT
		FROM PATIENT
		WHERE PATIENT_KEY=#{patientKey, jdbcType=VARCHAR}
	</select>
	
	<!-- 환자 신규 등록하는 인서트문 -->
	<insert id="insertPatient" parameterType="kr.or.ddit.vo.PatientVO">
		INSERT INTO patient (
		    patient_key, patient_name, patient_age
		    , patient_sex, patient_regno1, patient_regno2
		    , patient_pn, patient_address, patient_address_detail
		    , patient_type, patient_significant
		) VALUES (
			 #{patientKey, jdbcType=VARCHAR}
			, #{patientName, jdbcType=VARCHAR}
			, #{patientAge, jdbcType=NUMERIC}
			, #{patientSex, jdbcType=VARCHAR}
			, #{patientRegno1, jdbcType=NUMERIC}
			, #{patientRegno2, jdbcType=NUMERIC}
			, #{patientPn, jdbcType=VARCHAR}
			, #{patientAddress, jdbcType=VARCHAR}
			, #{patientAddressDetail, jdbcType=VARCHAR}
			, #{patientType, jdbcType=VARCHAR}
			, #{patientSignificant, jdbcType=VARCHAR}
		)
	</insert>
	
		
	<!-- 환자 수정하는 업데이트문 -->
	<update id="updatePatient" parameterType="kr.or.ddit.vo.PatientVO">
		UPDATE PATIENT
			SET PATIENT_NAME=  #{patientName, jdbcType=VARCHAR}
			, PATIENT_AGE= #{patientAge, jdbcType=NUMERIC}
			, PATIENT_SEX= #{patientSex, jdbcType=VARCHAR}
			, PATIENT_REGNO1= #{patientRegno1, jdbcType=NUMERIC}
			, PATIENT_REGNO2= #{patientRegno2, jdbcType=NUMERIC}
			, PATIENT_PN= #{patientPn, jdbcType=VARCHAR}
			, PATIENT_ADDRESS=#{patientAddress, jdbcType=VARCHAR}
			, PATIENT_ADDRESS_DETAIL= #{patientAddressDetail, jdbcType=VARCHAR}
			, PATIENT_TYPE= #{patientType, jdbcType=VARCHAR}
			, PATIENT_SIGNIFICANT= #{patientSignificant, jdbcType=VARCHAR}
		WHERE PATIENT_KEY=#{patientKey, jdbcType=VARCHAR}
	</update>
	
	
</mapper>