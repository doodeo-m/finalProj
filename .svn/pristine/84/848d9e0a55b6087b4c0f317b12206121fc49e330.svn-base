<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<style>
	.grid-stack{
		height: 100hv;
	}
/* 	.grid-stack-item{ */
/* 		border-radius: 1rem;  */
/* 	} */
	.card{
		margin: 0;
		--vz-card-inner-border-radius : 1rem;
		background-color : white;
	}
	.card-header{
		border-radius: 30px;
		background-color : #405189;
		color : white;
	}
	.rtBtn{
		float: right;
	}
	.nav-tabs .nav-link.active{
		background-color: #405189;
		color: white;
	}
	.ptTableForm{
		text-align: center;
	}
	#equipmentModalDiv > div{
		border: 1px solid black;
		width: 100%;
	}
	#equipmentModalDiv{
		display: flex;
		justify-content: center;
	}
	.modal-content{
		border-radius: 30px;
	}
	#eqDetailBtn{
		display: flex;
		justify-content: center;
		margin-top: 10px;
	}
	
    .grid-stack-item-content::-webkit-scrollbar {
         width: 5px;
         overflow-y: auto;
     }

     .grid-stack-item-content::-webkit-scrollbar-thumb {
         height: 30%;
         /* 스크롤바의 길이 */
         background: #d0d0d0a9;
         /* 스크롤바의 색상 */

         border-radius: 10px;
     }
     
     .bedImages{
     	width: 160px;
     	height: 120px;
     }
     .nowPtbedsStatusDiv{
     	display: flex;
     	justify-content: space-around;
     }
      .nowPtbedsStatusDiv > div:first-child{ 
      	margin-bottom: 0px; 
      }
</style>
<div class="grid-stack"> 

	<div class="grid-stack-item card" gs-x="0" gs-y="0" gs-w="3" gs-h="3">
		<div class="card-header">물리치료 대기환자 조회</div> 
		<div class="card-body">
			 <div class="grid-stack-item-content">
				<h4>-물리치료실</h4>
				<div id="ptWaitingListDiv" style="height: 300px;">
					<table class="table table-bordered ptTableForm">
						<thead class='table table-info table-striped'>
							<tr>
								<th style="width: 10%">환자코드</th>
								<th style="width: 23%">환자명<br/>[성별/나이]</th>
								<th style="width: 12%">상태</th>
								<th style="width: 15%">처방시간</th>
								<th style="width: 15%">호출하기</th>
							</tr>
						</thead>
						<tbody id="waitingListBody">
								<!-- 대기환자 목록 들어오는 위치 -->
						</tbody>
					</table>
				</div>
			</div>
		</div>
	</div>
	
	<div class="grid-stack-item card" gs-x="0" gs-y="5" gs-w="3" gs-h="2">
		<div class="card-header">환자 진료 차트</div> 
			<div class="card-body">
				<div class="grid-stack-item-content">
					<div id="patientChartDiv" style="height: 230px;">
						<table  class="table table-bordered" >
							<tr>
								<th class="table-info">환자명</th>
								<td id="chPatientName"><!-- 차트 환자명이 들어올 자리 --></td>
								<th class="table-info">나이/성별</th>
								<td id="chPatientAge"><!-- 환자 나이,성별이 들어올 자리 --></td>
							</tr>
							<tr>
								<th class="table-info">연락처</th>
								<td id="chPatientPN"><!-- 환자 연락처 들어올 자리 --></td>
								<th class="table-info">주소</th>
								<td id="chPatienAddr"><!-- 환자 주소 들어올 자리 --></td>
							</tr>
							<tr>
								<th class="table-info">보호자명</th>
								<td id="chGuardianName"><!-- 환자 보호자명 들어올 자리 --></td>
								<th class="table-info">보호자연락처</th>
								<td id="chGuardianPN"><!-- 보호자 연락처 들어올 자리 --></td>
							</tr>
							<tr>
								<th  class="table-info" colspan=4">P.I</th>
							</tr>
							<tr>
								<td colspan=4" id="chPI">
								</td>
							</tr>
							<tr>
								<th  class="table-info" colspan=4">D.I</th>
							</tr>
							<tr>
								<td colspan=4" id="chDI">
								</td>
							</tr>
						</table>				
					</div>
				</div>
			</div>		
	</div>
	
	<div class="grid-stack-item card" gs-x="3" gs-y="0" gs-w="6" gs-h="3">
		<div class="card-header">치료실 침상 현황 조회</div> 
		<div class="card-body">
			<div class="grid-stack-item-content">
				<div id="nowBedStatusList">
					<div class="nowPtbedsStatusDiv" id="nowPtbedsStatusTop">
						<!-- 침상 1-4 들어오는 위치-->
							<div id="bedKey1">
								<p>[1번침상]</p>
								<div id="bedImgDiv">
									<img class="bedImages" src="${pageContext.request.contextPath}/resources/images/pt_bed_able.jpg">
									<p class="bedStatus">사용가능</p>
								</div>
							</div>
							<div id="bedKey2">
								<p>[2번침상]</p>
								<div id="bedImgDiv">
									<img class="bedImages" src="${pageContext.request.contextPath}/resources/images/pt_bed_able.jpg">
									<p class="bedStatus">사용가능</p>
								</div>
							</div>
							<div id="bedKey3">
								<p>[3번침상]</p>
								<div id="bedImgDiv">
									<img class="bedImages" src="${pageContext.request.contextPath}/resources/images/pt_bed_able.jpg">
									<p class="bedStatus">사용가능</p>
								</div>
							</div>
							<div id="bedKey4">
								<p>[4번침상]</p>
								<div id="bedImgDiv">
									<img class="bedImages" src="${pageContext.request.contextPath}/resources/images/pt_bed_able.jpg">
									<p class="bedStatus">사용가능</p>
								</div>
							</div>
					</div>
					<div class="nowPtbedsStatusDiv" id="nowPtbedsStatusbottom">
						<!-- 침상 5-8 들어오는 위치-->
						<div id="bedKey5">
							<p>[5번침상]</p>
							<div id="bedImgDiv">
								<img class="bedImages" src="${pageContext.request.contextPath}/resources/images/pt_bed_able.jpg">
								<p class="bedStatus">사용가능</p>
							</div>
						</div>
						<div id="bedKey6">
							<p>[6번침상]</p>
							<div id="bedImgDiv">
								<img class="bedImages" src="${pageContext.request.contextPath}/resources/images/pt_bed_able.jpg">
								<p class="bedStatus">사용가능</p>
							</div>
						</div>
						<div id="bedKey7">
							<p>[7번침상]</p>
							<div id="bedImgDiv">
								<img class="bedImages" src="${pageContext.request.contextPath}/resources/images/pt_bed_able.jpg">
								<p class="bedStatus">사용가능</p>
							</div>
						</div>
						<div id="bedKey8">
							<p>[8번침상]</p>
							<div id="bedImgDiv">
								<img class="bedImages" src="${pageContext.request.contextPath}/resources/images/pt_bed_able.jpg">
								<p class="bedStatus">사용가능</p>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	
	<div class="grid-stack-item card" gs-x="3" gs-y="5" gs-w="6" gs-h="2">
		<div class="card-header">물리치료 액팅</div>
		<div class="card-body">
			<div class="grid-stack-item-content">
				<form id="actingForm" method="post" action="${pageContext.request.contextPath}/actingCommentUpdate.do">
					<table class="table table-bordered ptTableForm">
						<tr>
							<th class="table-info" id="acting">환자명</th>
							<td id="acPatientName"><!-- 액팅할 환자명이 들어올 자리 --></td>
							<th class="table-info">나이/성별</th>
							<td id="acPatientAge"><!-- 액팅할 환자 나이,성별이 들어올 자리 --></td>
						</tr>
						<tr>
							<th class="table-info">진단명</th>
							<td id="acPatientDi"><!-- 액팅할 환자 진단명이 들어올 자리 --></td>
							<th class="table-info">주치의</th>
							<td id="acDrName"><!-- 주치의 이름 들어올 자리 --></td>
						</tr>
						<tr>
							<td colspan=4">
								<div class="form-floating">
									 <textarea class="form-control" placeholder="Leave a comment here" id="floatingTextarea2" style="height: 100px"></textarea>
									 <label for="floatingTextarea2">Comments</label>
								</div>
							</td>
						</tr>
						<tr>
							<td colspan="4"><input id="actingBtn" type="submit" class="btn btn-primary callBtn" value="액팅하기"></td>
						</tr>
					</table>
				</form>
			</div>
		</div>
	</div>
	
	<div class="grid-stack-item card" gs-x="9" gs-y="0" gs-w="3" gs-h="3">
		<div class="card-header">물리치료 기구조회</div>
		<div class="card-body">
			<div class="grid-stack-item-content">
				<table class="table table-bordered ptTableForm">
					<tr class="table table-info table-striped">
						<th>기구명</th>
						<th>현재상태</th>
					</tr>
					<tr>
						<td>Shoulder-CPM</td>
						<td>[사용가능]</td>
					</tr>
					<tr>
						<td>ICT</td>
						<td>[사용중]</td>
					</tr>
					<tr>
						<td>TENS</td>
						<td>[사용가능]</td>
					</tr>
				</table>
			</div>
		</div>
	</div>
	
	<div class="grid-stack-item card" gs-x="9" gs-y="5" gs-w="3" gs-h="2">
		<div class="card-header">치료기구 상태관리</div>
		<div class="card-body">
			<div class="grid-stack-item-content">
				<div id="ptEquipmentDiv"  style="height: 230px;">
					<table class="table table-bordered ptTableForm" id="ptEquipmentTable">
					<thead>
						<tr class="table table-info table-striped">
							<th>기구명</th>
							<th>모델명</th>
						</tr>
					</thead>
					<tbody id = "ptEquipmentTbody">
<!-- 						치료기구 상태관리 목록 들어오는 위치  -->
					</tbody>
					</table>
				</div>
			</div>
		</div>
	</div>
	
	<!----------------------------------------------- 치료기구 상태관리 상세 모달창 ----------------------------------------------------->
		<!-- Grids in modals -->
		<div class="modal fade" id="ptEquipmentStatusModal" tabindex="-1" aria-labelledby="exampleModalgridLabel" aria-modal="true">
		    <div class="modal-dialog modal-xl">
		        <div class="modal-content">
		        	<div class="card">
		        		<div class="card-header" id="noticeCardHeader">물리치료기구 상세관리
		        			<button style="float: right;" type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" ></button>
		        			
		        		</div>
		        		<div class="card-body">
		        			<div id="equipmentModalDiv">
			        			<div id="equipmentDetailDiv">
			        				<h4 style="text-align: center;">물리치료기구 상세정보</h4>
									<div id="equipmentDetailTableDiv">
										<!-- 물리치료기구 상세내용 들어오는 위치 -->
									</div>

									<div id="eqDetailBtn">
										<input type="checkbox" class="btn-check" id="btn-check-outlined" autocomplete="off">
										<label class="btn btn-outline-primary" for="btn-check-outlined" style="margin-right: 10px;">수리신청</label>

										<input type="checkbox" class="btn-check" name="bedKey-outlined" id="success-outlined" autocomplete="off">
										<label class="btn btn-outline-success" for="success-outlined">수리중</label>	

										<input type="checkbox" class="btn-check" name="bedKey-outlined" id="danger-outlined" autocomplete="off">
										<label class="btn btn-outline-danger" for="danger-outlined"  style="margin-left: 10px;">폐기신청</label>
									</div>	

			        			</div>
			        			
								<div class="" id="equipmentStatusContentDiv">
									<h4>물리치료기구 상태점검표</h4>
			        				<table class='table table-bordered' style='width: 90%; margin:auto; text-align: center;'>
			        					<thead class='table-primary'>
											<tr>
												<th colspan="3">상태점검표</th>	
											</tr>
											<tr>
												<th style="width: 15%">점검일</th>
												<th>점검내용</th>
												<th style="width: 15%">작성자</th>
											</tr>
										</thead>	
									</table>
									<div id="equipmentStatusDiv"  style="height: 200px;">
										<table class='table table-bordered' style='width: 90%; margin:auto; text-align: center;'>
											<tbody id="equipmentStatusTbody">
												<!-- 점검내용 들어오는 위치 -->
											</tbody>
										</table>
									</div>
									<table class='table table-bordered' style='width: 90%; margin:auto; text-align: center;'>
										<tfoot>
												<tr>
													<td colspan="3">
														<div style="display:inline;">
															<form id="ptEqStatusInsertForm" method="post" action="${pageContext.request.contextPath}/ptEquipmentStatusInsert.do" style="display: flex; justify-content: space-around;">
																<select name="equipmentRecordStatus" class="form-select-sm" aria-label="Default select example" style="width: 22%;">
																	<option selected>장비 상태</option>
																	<option value="EAS1">상</option>
																	<option value="EAS2">중</option>
																	<option value="EAS3">하</option>
																</select>
																<input class="form-control form-control-sm" type="text" name="equipmentRecordContent" style="width: 70%;" placeholder="점검사항을 입력하세요" aria-label=".form-control-sm example">
																<input id="eqStatsuBtn" class="btn btn-primary callBtn" type="submit" value="작성"> 
															</form>
														</div>
													</td>
												</tr>
										</tfoot>
									</table>

			        			</div> <!-- equipmentStatusContentDiv 끝 -->
			        			
		        			</div>
		        		</div>
		        	</div>
		        </div>
		    </div>
		</div>
	<!------------------------------------------------------------------------------------------------------------------------->
	
	<!----------------------------------------------- 치료진행 모달창 --------------------------------------------------------------->
		<!-- Grids in modals -->
		<div class="modal fade" id="ptModal" tabindex="-1" aria-labelledby="exampleModalgridLabel" aria-modal="true">
		    <div class="modal-dialog modal-xl">
		        <div class="modal-content">
		        	<div class="card">
		        		<div class="card-header" id="noticeCardHeader">물리치료 진행하기
		        			<button style="float: right;" type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" ></button>
		        		</div>
		        		<div class="card-body">
		        		<h4>치료 진행할 침상 선택</h4>
							<div id="ptBedStatusDiv">
								<!-- 침상 버튼 오는 위치 -->
							</div>
		        		<h4>현재 사용가능 치료기구</h4>
		        			<div id="ptOrderEquipmentList">
			        		<!-- 오더 내역에 있는 치료 도구 목록이 들어와야한다. -->
								<select id="ptEquipmentSelect">	
									
								</select>
		        			</div>
		        		</div>
						<div class="card-footer">
							<form id="ptStartForm" method="post" action="${pageContext.request.contextPath}/ptRoomStatusUpdate.do">
								<input type="submit" id="ptStartSubmit"  class="btn btn-primary" value="치료 진행하기">
							</form>
						</div>
		        	</div>
		        </div>
		    </div>
		</div>
	<!------------------------------------------------------------------------------------------------------------------------->
</div>

<script>

// GridStack -------------------------------------------------------------------------
var grid = GridStack.init({});
$("tbody:not(.disable)").on("click", ".datatr", function(event){
	$(this).siblings(".datatr").removeClass("active");
	$(this).toggleClass("active");
});
//------------------------------------------------------------------------------------ 

// 대기환자 조회 리스트 --------------------------------------------------------------------- 
const waitingListBody = $("#waitingListBody");

const ptWaitingList = () =>{
	$.getJSON("/FinalPJ/ptWaitingPatientList.do").done(function(resp){
		let waitingList = resp;
		
		console.log(waitingList);
		
		let waitingTrTags = [];
		
		if(waitingList.length > 0){
			$.each(waitingList, function(idx, waiting){
				// let patientKey = waiting.patientKey;
				let trs = $("<tr onclick='fn_patientChartDetail(\"" + waiting.patientKey + "\", \"" + waiting.waitingList[0].waitingKey + "\");'>").append(
					$("<td>").html(waiting.patientKey),
					$("<td>").html(waiting.patient.patientName + " [" + waiting.patient.patientSex + "/" + waiting.patient.patientAge + "]"),
					$("<td>").html(waiting.waitingList[0].waitingStatusName),
					$("<td>").html(waiting.waitingList[0].waitingChangeTime),
					$("<td>").append(
						$("<input type='button' class='btn btn-primary callBtn' data-waitkey="+ waiting.waitingList[0].waitingKey +" onclick=\'fn_openOrderEqModal(\"" + waiting.patientKey + "\");' value='호출'>")		
					),
				).addClass("datatr").data("source", waiting);
				waitingTrTags.push(trs);
			});
		}else{
			waitingTrTags.push(
				$("<tr>").html($("<td colspan='5'>").html("현재 대기환자가 없습니다."))		
			)
		}
		waitingListBody.empty();
		waitingListBody.append(waitingTrTags);
	})
}
ptWaitingList();
//------------------------------------------------------------------------------------ 

// 치료기구 상태관리 목록 -------------------------------------------------------------------- 

const ptEquipmentTbody = $("#ptEquipmentTbody");

// const ptEquipmentDiv2 = $("#ptEquipmentDiv2");

const ptEquipmentList = ()=>{
	$.getJSON("/FinalPJ/ptEquipmentList.do").done(function(resp){
		let equipmentList = resp;
		
		console.log(equipmentList);
		
		let equipmentTrTags = [];
		
			$.each(equipmentList, function(idx, equipment){
				let trs = $("<tr onclick='fn_openEquipmentModal( " + equipment.equipmentKey + " );'>").append(
							$("<td>").html(equipment.equipmentName),		
							$("<td>").html(equipment.equipmentModel)		
							).addClass("datatr").data("source", equipment);	
				equipmentTrTags.push(trs);
			});
		ptEquipmentTbody.append(equipmentTrTags);
		// ptEquipmentDiv2.append(equipmentTrTags);
	})
}
ptEquipmentList();
//------------------------------------------------------------------------------------ 


// 치료 기구 상태관리 상세보기 ---------------------------------------------------------------- 

const equipmentDetailTableDiv = $("#equipmentDetailTableDiv");
const equipmentDetailTableDiv2 = $("#equipmentDetailTableDiv2");

const fn_openEquipmentModal = (equipmentKey) =>{
	console.log(equipmentKey);
	$("#ptEquipmentStatusModal").modal("show");
	fn_equipmentStatusDetail(equipmentKey);
	fn_equipmentStatusRec(equipmentKey);
}


const fn_closeEquipmentModal = () =>{
	$("#ptEquipmentStatusModal").modal("hide");
	$("#equipmentDetailTableDiv2").remove();
	$("#equipmentStatusTbody").empty();
}

const fn_equipmentStatusDetail = (equipmentKey) =>{
	console.log("눌렀다.");
	console.log(equipmentKey);
// 	$("#equipmentDetailTableDiv2").remove();
// 	$("#ptEquipmentStatusModal").modal("show");
// 	$('#exampleModalgrid').modal('hide');

	$.getJSON("/FinalPJ/ptEquipmentDetail.do?what=" + equipmentKey).done(function(resp){
		console.log(resp);
		let equipmentDetail = resp;
		let equipmentKey = resp.equipmentKey;

		if(equipmentDetail!=null){
			let equipmentDetailTags = equipmentDetailTableDiv.append(
				$("<div id='equipmentDetailTableDiv2'>").append(
					$("<input id='equipmentKeyInput' type='hidden' value=" + equipmentKey +">"),
					$("<table class='table table-bordered' style='width: 90%; text-align: center; margin:auto;'>").append(
							$("<thead>").append(
								$("<tr class='table-primary'>").append(
									$("<th colspan='2'>").html("기구정보")
								)
							),
	
							$("<tbody>").append(
								$("<tr>").append(
									$("<th class='table-light'>").html("기구명"),
									$("<td>").html(equipmentDetail.equipmentName)
								),
								$("<tr>").append(
									$("<th class='table-light'>").html("모델명"),
									$("<td>").html(equipmentDetail.equipmentModel)
								),
								$("<tr class='table-primary'>").append(
									$("<th colspan='2'>").html("거래처정보")
										),
								$("<tr>").append(
									$("<th class='table-light'>").html("거래처명"),
									$("<td>").html(equipmentDetail.buyerVO.buyerName)
								),
								$("<tr>").append(
									$("<th class='table-light'>").html("담당자"),
									$("<td>").html(equipmentDetail.buyerVO.buyerCharger)
								),
								$("<tr>").append(
									$("<th class='table-light'>").html("연락처"),
									$("<td>").html(equipmentDetail.buyerVO.buyerTel)
								)
							)
						)
					)
			)
		}else{
			let equipmentDetailTags = equipmentDetailTableDiv.append(
				$("<div id='equipmentDetailTableDiv2'>").append(
						$("<h4>").html("물리치료기구 정보가 없습니다.")
					)
				)
		}

	})
	

}


// 모달 창 닫히면 안에 내용 지운다.
ptEquipmentStatusModal.addEventListener('hide.bs.modal', function (event) {
	console.log("모달 닫았다.");
	$("#equipmentDetailTableDiv2").remove();	
	$("#equipmentStatusTbody").empty();
})

//------------------------------------------------------------------------------------ 


// 장비 상태 기록 목록 ----------------------------------------------------------------

const equipmentStatusTbody = $("#equipmentStatusTbody");

const fn_equipmentStatusRec = (equipmentKey) =>{
	console.log("Rec 눌렀다");
	console.log(equipmentKey);

	
	$.getJSON("/FinalPJ/ptEquipmentStatusList.do?eqKey="+equipmentKey).done(function(resp) {
		console.log("원본데이터 :",resp);
		let eqDetailList = resp;
		let equipmentStatusTags = [];

		// console.log("test", resp["0"].eqStatusRecVO)

		if(eqDetailList.length > 0) {
			$.each(eqDetailList, function(idx, eqDetail){
				// console.log("test", eqDetail.eqStatusRecVO.equipmentRecordDate)
				let trs = $("<tr>").append(
							$("<td>").html(eqDetail.eqStatusRecVO.equipmentRecordDate),
							$("<td>").html(eqDetail.eqStatusRecVO.equipmentRecordContent),
							$("<td>").html(eqDetail.eqStatusRecVO.equipmentRecordWriter)
						)
					equipmentStatusTags.push(trs);
			});
			equipmentStatusTbody.append(equipmentStatusTags);
		}else{
			let equipmentStatusTags = equipmentStatusTbody.append(
				$("<tr>").append(
					$("<td colspan='3'>").html("상태점검 기록이 없습니다.")
				)
			)
		}

		$("#eqStatsuBtn").data("equipmentKey",equipmentKey);

	});
}

//------------------------------------------------------------------------------------ 


// 장비 상태 기록 인서트 ---------------------------------------------------------------

let ptEqStatusInsertForm = $("#ptEqStatusInsertForm");

// let equipmentKey = $("#equipmentKeyInput").val();



	ptEqStatusInsertForm.on("submit", function(event){
		event.preventDefault();
	
		let equipmentKey = $("#eqStatsuBtn").data("equipmentKey");
		
		console.log("equipmentKey : ", equipmentKey);
		
		let eqStatusRecData = {
			equipmentKey : equipmentKey,
			equipmentRecordContent : $("input[name=equipmentRecordContent]").val(),
			equipmentRecordStatus : $("select[name=equipmentRecordStatus] option:Selected").val()
		}

		console.log(eqStatusRecData);
		
		$.ajax({

			method : "POST",
			url : "${pageContext.request.contextPath}/ptEquipmentStatusInsert.do",
			data : JSON.stringify(eqStatusRecData),
			contentType : 'application/json; charset=utf-8',
			dataType : "text",
			beforeSend: function (xhr) {   /*데이터를 전송하기 전에 헤더에 csrf값을 설정한다*/
            xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
        	}, 
			success : function(resp) {
				console.log("성공");
				equipmentStatusTbody.empty();
				fn_equipmentStatusRec(equipmentKey);

			},
			error: function (request, status, error) {
	        console.log("code: " + request.status);
	        console.log("message: " + request.responseText);
	        console.log("error: " + error);
	    	}

		});
		return false;
	})

//------------------------------------------------------------------------------------ 

const ptModal = $("#ptModal");

const fn_openOrderEqModal = (patientKey) =>{
	console.log("모달 열었다.");
	ptModal.modal('show');
	fn_ptStart(patientKey);
	ptRoomStatusSelect();


}

$("#ptModal").on('hide.bs.modal', function(event) {
	console.log("모달 닫았다.");
	$(".ptEqOpt").remove();
	$("#ptBedStatusDiv").empty();
	});

	const ptModalClose = () =>{
		console.log("모달 닫으면 내용 지우는 함수.");
		$(".ptEqOpt").remove();
		$("#ptBedStatusDiv").empty();
	}

	


// 치료도구 목록 셀렉트 박스 -----------------------------------------------------------

const fn_ptStart = (patientKey) =>{
	console.log("patientKey : ", patientKey);
	
	$.getJSON("${pageContext.request.contextPath}/ptEquipmentSelectList.do?who="+patientKey).done(function(resp){
		let ptEqList = resp;
		console.log("ptEqList : ",ptEqList);
		let orderKey = ptEqList[0].orderKey;
		let eqKey = ptEqList[0].equipmentKey;

		$("#ptEquipmentSelect").attr("data-patientkey", patientKey);
		$("#ptEquipmentSelect").attr("data-orderkey", orderKey);
		$("#ptEquipmentSelect").attr("data-eqkey", eqKey);

		let ptEquipmentSelect = $("#ptEquipmentSelect");
		
		let orderEqList = [];

		if(ptEqList.length>0){
			$.each(ptEqList, function(idx, ptEq){
				let tags = $("<option class='ptEqOpt' data-pteqkey=" + ptEq.ptEquipmentKey + ">").html(ptEq.equipmentName+"["+ ptEq.ptEquipmentCode +"]")
				orderEqList.push(tags);
			});
			ptEquipmentSelect.append(orderEqList);
		}else{
			let tags = $("<option class='ptEqOpt'>").html("뭔가 이상하다")
				orderEqList.push(tags);	
		}
		ptEquipmentSelect.append(orderEqList);


	});
}


//------------------------------------------------------------------------------------ 

let bedBtnClick = () =>{
	$(".btn-check").ready(function() {
	  // 버튼 클릭 시 선택된 라디오 버튼의 data-ptBedKey 속성 값 가져오기
	  $('.btn-check').on('click', function() {
		let checkedData = $('input[name="bedKey"]:checked').data('ptBedKey');
		console.log("checkedData : ", checkedData);
		return checkedData;
	  });
	});
}
bedBtnClick();

// 침상 선택 인풋 박스 만들기 -----------------------------------------------------------------

const ptRoomStatusSelect = () =>{
	$.getJSON("${pageContext.request.contextPath}/ptRoomStatusSelect.do").done(function(resp){
		let bedStatus = resp;
		console.log(bedStatus);

		let ptBedStatusDiv = $("#ptBedStatusDiv");
		$.each(bedStatus, function(idx, status){
			ptBedStatusDiv.append(
				$("<input type='radio' class='btn-check' name='bedKey' data-ptkey="+ status.ptBedKey +" value='" + status.ptBedStatus + "' id='option"+ status.ptBedKey +"' autocomplete='off'>"),
				$("<label class='btn btn-secondary' for='option"+ status.ptBedKey +"'>" + status.ptBedKey + "번 Bed</label>")
				// ,$("<p>").html(status.ptBedKey)
			)
		});
		fn_ptRoomStatusChange();
		
	});

}




//------------------------------------------------------------------------------------ 


// 침상상태에 따라 radio disabled로 변화 ----------------------------------------------
const fn_ptRoomStatusChange = () =>{
	let targetValue = "BS02";
    $('input[name="bedKey"]').each(function() {
      var radioValue = $(this).val();
      if (radioValue === targetValue) {
        $(this).prop('disabled', true);
        $(this).next('label').addClass('disabled');
      } else {
        $(this).prop('disabled', false);
        $(this).next('label').removeClass('disabled');
      }
    });
}


//------------------------------------------------------------------------------------ 

$('input[type="radio"].btn-check').on('click', function() {
		var ptkey = $(this).data('ptkey');
		console.log('ptkey : ',ptkey);
	});



// 치료 진행 버튼 눌러서 침상 상태 업데이트 + 기록지 추가 --------------------------------------------

const ptStartForm = $("#ptStartForm");

	// let waitkey = $(".callBtn").data('waitkey');

		

	ptStartForm.on("submit", function(event){
		event.preventDefault();

		let ptBedKey = $('input[type="radio"]:checked').data('ptkey');
		// console.log("ptBedKey ? : ", ptBedKey);
		
		// let ptBedKey = bedBtnClick();
		console.log("ptBedKey ? : ", ptBedKey);


		let waitKey = $('.callBtn').data('waitkey');
		console.log("waitKey : ",waitKey);	

		let data = {
			ptBedKey : ptBedKey,
			ptBedStatus : "BS02"
		}

		// 침상상태 업데이트
		$.ajax({
			method : "post",
			url : "${pageContext.request.contextPath}/ptRoomStatusUpdate.do",
			data : JSON.stringify(data),
			contentType : 'application/json; charset=utf-8',
			dataType : "text",
			beforeSend: function (xhr) {   /*데이터를 전송하기 전에 헤더에 csrf값을 설정한다*/
            	xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
        	}, 
			success : function(resp) {
				console.log("침상 사용상태 업데이트 성공");
				fn_ptRoomStatusChange();
				$("#ptBedStatusDiv").empty();
				ptRoomStatusSelect();
			},
			error: function (request, status, error) {
	        console.log("code: " + request.status)
	        console.log("message: " + request.responseText)
	        console.log("error: " + error);
	    	}
		});

		let ptEqKey = $("#ptEquipmentSelect option:selected").data("pteqkey");
		console.log(ptEqKey);

		let patientkey = $("#ptEquipmentSelect").data("patientkey");
	
		// 장비 상태 변화 
		$.ajax({
			method : "post",
			url : "${pageContext.request.contextPath}/ptEuipmentStatusUpdate.do",
			data : JSON.stringify(ptEqKey), 
			contentType : 'application/json; charset=utf-8',
			dataType : "text",
			beforeSend: function (xhr) {   /*데이터를 전송하기 전에 헤더에 csrf값을 설정한다*/
            	xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
        	}, 
			success : function(resp) {
				console.log("장비 상태 업데이트 성공");
				$("#ptEquipmentSelect").empty();
				fn_ptStart(patientkey);
			},
			error: function (request, status, error) {
				console.log("code: " + request.status)
				console.log("message: " + request.responseText)
				console.log("error: " + error);
	    	}
		});

		let orderKey = $("#ptEquipmentSelect").data("orderkey");
		let equipmentKey = $("#ptEquipmentSelect").data("eqkey");

		// 침상번호, 오더키, 징비키 가져와야함
		let ptRecordData = {
				ptBedKey : ptBedKey,
				orderKey : orderKey,
				equipmentKey : equipmentKey
		}

		$.ajax({
			method : "POST",
			url : "${pageContext.request.contextPath}/ptRecordInsert.do",
			data : JSON.stringify(ptRecordData), 
			contentType : 'application/json; charset=utf-8',
			dataType : "text",
			beforeSend: function (xhr) {   /*데이터를 전송하기 전에 헤더에 csrf값을 설정한다*/
            	xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
        	}, 
			success : function(resp) {
				console.log("치료 기록 인서트 성공");
				
				$(".nowPtbedsStatusDiv").empty();
				// fn_nowBedStatus();
				fn_nowPtBedStatusList();

// 				ptTimer();

				ptModalClose();
				$("#ptModal").modal("hide");

			},
			error: function (request, status, error) {
				console.log("code: " + request.status)
				console.log("message: " + request.responseText)
				console.log("error: " + error);
	    	}
		})
		return false;
	})
//------------------------------------------------------------------------------------ 

// 침상 상태 출력 --------------------------------------------------------------------- 

const fn_nowPtBedStatusList = () =>{
	$.getJSON("${pageContext.request.contextPath}/nowPtBedStatusList.do").done(function(resp){
		console.log("침상상태 리스트 : ",resp)

		let nowBedRespList = resp;
		let nowBedStatusList = $("#nowBedStatusList");

		
		// nowBedStatusList.find("[id^='bedKey']");

		let nowBedListTags = [];

		$.each(nowBedRespList, function(idx, nowBed){

			let sy = nowBed.ptRecordDate[0];
			let smon = nowBed.ptRecordDate[1];
			let sd = nowBed.ptRecordDate[2];
			let sh = nowBed.ptRecordDate[3];
			let smin = nowBed.ptRecordDate[4];
			let ss = nowBed.ptRecordDate[5];

			let bedKey = nowBed.ptBedKey;

			if(nowBed.ptBedStatus=="BS02"){
				let bedKeyDiv = document.getElementById("bedKey" + nowBed.ptBedKey);
				$(bedKeyDiv).find("[class='bedImages']").attr("src","${pageContext.request.contextPath}/resources/images/pt_bed_unable.jpg");
				let test = $(bedKeyDiv).append(
					$("<p>").html(nowBed.patientName+"["+nowBed.equipmentName+"]"),
					$("<p class='ptTimePTag'>")
						// $("<p>").html(nowBed.ptRecordDate[3]+":"+nowBed.ptRecordDate[4]+":"+nowBed.ptRecordDate[5])	
							)
				$(bedKeyDiv).data("ptTime", "1");
				ptTimer(new Date(sy,smon,sd,sh,smin,ss),bedKeyDiv,bedKey);


			}
		});


		
	});
}
fn_nowPtBedStatusList();
//------------------------------------------------------------------------------------ 

let now = moment();
console.log(now.format());


// 치료 시간 시계 ---------------------------------------------------------------------

const ptTimer = (a,b,c) =>{
// 	console.log("a 누구니 : ",a);
// 	console.log("b 누구니 : ",b);
// 	console.log("c 누구니 : ",c);

	let time = moment(a).subtract(1, "months");
	let nowTime = moment().format();

	let intervalId = setInterval(()=>{
		
		time.add(1, "s");
		

		let diffTime = now.diff(time, "minutes");
// 		console.log("차이계산하기: ",diffTime);
		
			if(diffTime>=30){
				clearInterval(intervalId);
				$(b).find("[class='ptTimePTag']").remove();
				$(b).append(
					$("<button id='ptEnd' class='btn btn-primary' onclick=\'fn_actingDataInput(" + c + ")'>").text("치료종료")
						)
			}else{
				$(b).find("[class='ptTimePTag']").text("진행시간 : "+diffTime+"분");
			}
		
		}, 1000);

		return intervalId;
		
}

//------------------------------------------------------------------------------------ 

// 액팅화면에 데이터 넣기 -------------------------------------------------------------

let fn_actingDataInput = (bedKey) =>{
	
	$("#acPatientName").text("");
	$("#acPatientAge").text("");
	$("#acPatientDi").text("");
	$("#acDrName").text("");
	
	$.getJSON("${pageContext.request.contextPath}/actingDetail.do?bedKey="+bedKey).done(function(resp){
		console.log(resp);
		
		let actingInfo = resp;
		
		$("#acPatientName").text(actingInfo.patientName);
		$("#acPatientAge").text(actingInfo.patientAge+"/"+actingInfo.patientSex);
		$("#acPatientDi").text(actingInfo.diseaseNmEn);
		$("#acDrName").text(actingInfo.empName);
		
		let ptRecordKey = actingInfo.ptRecordKey;
		$("#actingBtn").data("ptrecordkey",ptRecordKey);
		
	});
	
}

//------------------------------------------------------------------------------------ 


// 코멘트 입력 후 업데이트하기 ---------------------------------------------------------------- 

const actingForm = $("#actingForm");

actingForm.on("submit", function(event){
	event.preventDefault();
	
	console.log("액팅버튼눌렀다.")
	
	let ptRecordKey = $("#actingBtn").data("ptrecordkey");
	let ptRecordContent = $("#floatingTextarea2").val();
	
	let data = {
			ptRecordKey : ptRecordKey,
			ptRecordContent : ptRecordContent 	
	}
	
	console.log(data);
	
	$.ajax({
		method : "POST",
		url : "${pageContext.request.contextPath}/actingCommentUpdate.do",
		data : JSON.stringify(data),
		contentType : 'application/json; charset=utf-8',
		dataType : "text",
		beforeSend: function (xhr) {   /*데이터를 전송하기 전에 헤더에 csrf값을 설정한다*/
        	xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
    	}, 
		success : function(resp){
			console.log("액팅 comment 업데이트 완료");
			$("#floatingTextarea2").val("")
		},
		error: function (request, status, error) {
	        console.log("code: " + request.status)
	        console.log("message: " + request.responseText)
	        console.log("error: " + error);
	    }
	});
	
	return false;
})

//------------------------------------------------------------------------------------ 

// 환자 진료 차트 상세 ---------------------------------------------------------------------

let fn_patientChartDetail = (patientKey, waitingKey) =>{
	
	$("#chPatientName").text("");
	$("#chPatientAge").text("");
	$("#chPatientPN").text("");
	$("#chPatienAddr").text("");
	$("#chGuardianName").text("");
	$("#chGuardianPN").text("");
	
	$.getJSON("${pageContext.request.contextPath}/patientChartDetail.do?patientKey="+patientKey+"&waitingKey="+waitingKey).done(function(resp){
		
		let chResp = resp;
		
		$("#chPatientName").text(chResp.patient.patientName);
		$("#chPatientAge").text(chResp.patient.patientAge+"/"+chResp.patient.patientSex);
		$("#chPatientPN").text(chResp.patient.patientPn);
		$("#chPatienAddr").text(chResp.patient.patientAddress);
		$("#chGuardianName").text(chResp.patient.guardian.guardianName);
		$("#chGuardianPN").text(chResp.patient.guardian.guardianPN);
		
		$("#chPI").html(
				"- C.C : " + chResp.receiptReason + "<br>"
				+ "- S/P : " + chResp.patient.preDiagnosis.preDiagnosisExperience + "<br>"
				+ "- P/Hx : " + chResp.patient.preDiagnosis.preDiagnosisDisease + "<br>"
				+ "- allergic : " + chResp.patient.preDiagnosis.preDiagnosisAllergy + "<br>"
				+ "- 임신유무 : " + chResp.patient.preDiagnosis.preDiagnosisPregnancy + "<br>"	
				);
		$("#chDI").html(
			"- Dx : " + chResp.mchartList[0].dianosis.diease.diseaseNmEn + "<br>"
			+ "- comment : " + chResp.mchartList[0].chartCont
		);

	
	})
		
	
	
}
// fn_patientChartDetail();

//------------------------------------------------------------------------------------ 

// Scroll 생성 ------------------------------------------------------------------------- 

let ptEquipmentDiv = document.querySelector('#ptEquipmentDiv');
new SimpleBar(ptEquipmentDiv, { autoHide: true });

let equipmentStatusDiv = document.querySelector('#equipmentStatusDiv');
new SimpleBar(equipmentStatusDiv, { autoHide: true });

let ptWaitingListDiv = document.querySelector('#ptWaitingListDiv');
new SimpleBar(ptWaitingListDiv, { autoHide: true });

let patientChartDiv = document.querySelector('#patientChartDiv');
new SimpleBar(patientChartDiv, { autoHide: true });

//------------------------------------------------------------------------------------ 


</script>











