<%@ page language="java" contentType="text/html; charset=UTF-8"
pageEncoding="UTF-8"%> <%@ taglib uri="http://java.sun.com/jsp/jstl/core"
prefix="c"%>
<style>
	/*---------------------------------------------------모달 관련 CSS 시작---------------------------------------------------*/
    #modal {
        position: fixed;
        width: 100%;
        /* fixed일 때는 height:100% 동작 */
        height: 100%;
        left: 0px;
        top: 0px;
        background-color: rgba(0, 0, 0, 0.520); /* 모달이 열린 후 배경 색상 */
        z-index: 500;    /* 무조건 크겡! */
        display: none;
    }

    #modalCont {
        width: 60%;
        height: 80%;
        border-radius: 5px;
        background-color: rgb(255, 255, 255);   /* 모달 바디 색상 */
        color: rgba(0, 0, 0, 0.88); /* 글자색 */
        margin: 5% auto;   /* 수평 가운데 정렬 */
        padding-left: 35px;
        padding-top: 20px;
    }
	/*---------------------------------------------------모달 관련 CSS 끝----------------------------------------------------*/
</style>


<!-----------------------------------------------------모달 html 시작 ----------------------------------------------------->
<div id="modal">    <!-- #modal 안에 모달에 넣을 내용 담기-->
	<div id="modalCont">

		<div class="modalHeader">
			<h1>결제 정보</h1>
			<hr>
		</div>

		<div class="modalBody">
			모달내용
		</div>

		<button>결제 완료하기</button>
		<button onclick="modalClose()">닫기</button>
	</div>
</div>
<!-----------------------------------------------------모달 html 끝 ----------------------------------------------------->


<div class="grid-stack"><!-- 그리드스택 공간 -->
<!-- 수납대기목록 -->
	<div class="grid-stack-item" gs-x="6" gs-y="0" gs-w="3" gs-h="3">
		<div class="grid-stack-item-content">
			<div class="">
				<h5>수납 대기 목록</h5>
				<hr />
			</div>
			<div class="" id="">
				<span></span>
				<table class="table table-bordered">
					<thead class="table-info">
						<tr>
							<th>대기번호</th>
							<th>이름</th>
							<th>수납여부</th>
						</tr>
					</thead>
					<tbody id="waitingPatientList"></tbody> <!-- 수납을 기다리는 환자 대기목록 -->
				</table>
			</div>
		</div>
	</div>

	<!-- 환자 상세보기 -->
	<div class="grid-stack-item" gs-x="6" gs-y="3" gs-w="3" gs-h="2">
		<div class="grid-stack-item-content">
			<div class="">
				<h5>상세보기</h5>
				<hr />
			</div>
			<div class="" id="">
				<span></span>
				<table class="table table-bordered">
					<thead class="table-info">
						<tr>
							<th>환자번호</th>
							<th>이름</th>
							<th>주민번호</th>
							<th>결제금액</th>
						</tr>
					</thead>
					<tbody id="detailPatient"></tbody>	<!-- 대기목록에서 클릭한 환자 상세정보 보여주기 -->
				</table>
				<button onclick="modalOpen()">모달결제하기</button>
			</div>
		</div>
	</div>

	<!-- 수납기록 -->
	<div class="grid-stack-item" gs-x="9" gs-y="3" gs-w="3" gs-h="5">
		<div class="grid-stack-item-content">
			<div class="">
				<!-- 수납이 완료된 환자 목록 보여주기 -->
				<h5>수납완료기록</h5>
				<hr />
			</div>
			<div class="" id="">
				<span></span>
				<table class="table table-bordered">
					<thead class="table-info">
						<tr>
							<th>환자번호</th>
							<th>이름</th>
							<th>주민번호</th>
						</tr>
					</thead>
					<tbody id="completePayment"></tbody>	<!-- 수납이 완료된 환자 보여주기 -->
				</table>
			</div>
		</div>
	</div>
</div>
<script>
	// 그리드스택 기본설정
	var grid = GridStack.init({});




	// 수납을 기다리는 환자 대기목록 불러오기  waitingList()-------------------------정민-------------------------------------
	const waitingPatientList = $("#waitingPatientList");	// 대기목록 테이블 tbody 선택

	const waitingList = () => {

		$.ajax({
			type: "get",
			url: "${cPath}/patient/paywaiting",
			dataType: "json",
			success: function(wpl){

				waitingPatientList.empty();	// 데이터 잘 받아왔다면 초기화 한번 해주기
				let waitNo = 1;	// 대기번호 선언

				$.each(wpl, function(i, waitList){	// 대기목록환자 반복문 돌려서 tr, td태그 만들기
					console.log("가격 : ", waitList.pay.payTotalCost);

					let tr = $('<tr>').on('click', function(){fn_wplClick(this, waitList);}).append(
						$('<td>').html(waitNo)	// 대기번호
						, $('<td>').html(waitList.patientName)	// 환자이름
						, $('<td>').html("미납")	// 수납여부가 0인 데이터만 가져오는 쿼리로 만들었기 때문에 미납을 넣어주었음 거래가 완료되면 1로 update해서 결제내역으로 이동시키기
						).data("waitingListData", wpl);	// 다른데서 사용할 수 있으니 wpl 저장해두기

						waitingPatientList.append(tr);
						waitNo++;	// 대기번호 증가해주기
				})

			},
			error: function(request, status, error){
				console.log("code : ", request.state);
				console.log("message : ", request.responseText);
				console.log("error : ", error);
			}
		})

	};	waitingList();
	// ----------------------------------------------------------------------정민------------------------------------------



	// 정민 - 수납 대기목록해서 환자를 클릭하면 결제하기 위해 상세보기 칸으로 이동 --------------시작----------------------------------------
	const detailPatient = $("#detailPatient");	// 환자 상세보기 선택
	// 수납대기목록 환자 tr 누르면 상세보기로 옮겨지도록 만든 함수
	const fn_wplClick = (wThis, waitingList) => {
		detailPatient.empty();
		let tr = $("<tr>").append(
			$("<td>").html(waitingList.patientKey)
			, $("<td>").html(waitingList.patientName)
			, $("<td>").html(waitingList.patientRegno1)
			, $("<td>").html(waitingList.pay.payTotalCost)
			);
			detailPatient.append(tr);
	}
	// ------------------------------------------------------------------------끝---------------------------------------




	// 정민 - 수납이 완료된 사람들 보여주는 리스트 ----------시작----------------------------------------------------------------
	const completePayment = $("#completePayment");	// 수납 완료된 사람들 테이블 선택
	const comletteList = () => {
		$.ajax({
			type:"get",
			url:"${cPath}/patient/completePayment",
			dataType:"json",
			success:function(cpList){
				completePayment.empty();
				$.each(cpList, function (i, v) {
					let tr = $("<tr>").append(
						$("<td>").html(v.patientKey),
						$("<td>").html(v.patientName),
						$("<td>").html(v.patientRegno1)
						);
					completePayment.append(tr);
				})
			}
		})
	}
	comletteList();
	// ----------------------------------------------끝--------------------------------------------------------------

	// 정민 -- 결제하기 버튼 클릭 이벤트--------------------시작-------------------------------------------------------------
	const payButton = $("#payButton");	// 결제하기 버튼 선택

	// onclick 이벤트 주기
	payButton.on("click", function () {
	})


	// ------------------------------------------------------------모달 관련 스크립트 시작 ------------------------------------------------------------
	const myModal = document.querySelector('#modal');
	const modalOpen = () => {
		myModal.style.display = 'block'; // 보이게!
	}

	const modalClose = () => {
		myModal.style.display = 'none'; // 보이게!
	}
	// ------------------------------------------------------------모달 관련 스크립트 끝 ------------------------------------------------------------
</script>