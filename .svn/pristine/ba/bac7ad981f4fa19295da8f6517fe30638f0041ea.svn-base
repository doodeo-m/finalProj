<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://www.springframework.org/tags/form" prefix="form"%>

<style>
ul.tabs {
	margin: 0px;
	padding: 0px;
	list-style: none;
}

ul.tabs li {
	background: none;
	color: #222;
	display: inline-block;
	padding: 10px 15.48px;
	cursor: pointer;
}

ul.tabs li.current {
	border-radius: 5% 5% 0% 0%;
	background: #a8d9fb;
	color: #222;
}

.tab-content {
	display: none;
	padding: 15px;
}

.tab-content.current {
	display: inherit;
}

.datatr:hover {
	background-color: #C1D3BA;
}

.datatr.active {
	background-color: #9AEDE3;
}

.grid1, .grid2 {
	padding: 10px;
	margin: 0px;
	border: 1px solid black;
	background-color: white;
	border-radius: 30px;
}

.grid-stack {
	height: 100hv;
}

#productH4 {
	text-align: center;
	font-weight: bold;
}

#orderBtn {
	float: right;
	margin: 10px;
}

#noticeBoardSubmitBtn {
	margin: 10px;
	float: right;
}
</style>
<script>
				$(function () {
					$('ul.tabs li').click(function () {
						console.log("여기서this는 무엇? ", this)
						var tab_id = $(this).attr('data-tab');

						$('ul.tabs li').removeClass('current');
						$('.tab-content').removeClass('current');

						$(this).addClass('current');
						$("#" + tab_id).addClass('current');
					});

				});
			</script>
</head>

<body>
	<div class="grid-stack">
		<!-- 공지사항 게시판 위치 -->
		<div class="grid-stack-item grid1" gs-x="0" gs-y="2" gs-w="6" gs-h="5">
			<div class="grid-stack-item-content tb" id="noticeBoardDivGrid">
				<div id="noticeBoardDiv">
					<div id="productHeader">
						<h3 id="productH4">약품목록</h3>
						검색하기 : <input type="text" id="inputId" placeholder="검색할 내용">

					</div>
					<table id="noticeBoardTB" class="table table-bordered">
						<thead class="table table-info table-striped">
							<tr>
								<th>의약품번호</th>
								<th>의약품명</th>
								<th>남은수량</th>
								<th>단위</th>
								<th>회사명</th>
								<th>투여경로</th>
								<th>가격</th>
							</tr>
						</thead>
						<tbody id="listBody">
							<!-- 공지사항 리스트 들어오는 위치 -->
						</tbody>
					</table>
				</div>
			</div>
		</div>

		<div class="grid-stack-item grid2" gs-x="6" gs-y="0" gs-w="6" gs-h="2">
			<div class="grid-stack-item-content tb">
				<!--<span style="font-size: 2em; font-weight:bolder; text-align: center;"  >약품 주문하기</span>-->
				<h3 id="productH4">약품 주문하기</h3>
				<button type="button" id="orderBtn" onclick="emptyBtn()"
					class="btn btn-primary">비우기</button>
				<button type="button" id="orderRequest" class="btn btn-primary ">주문
					요청</button>
				<table class="table table-bordered" id="requestTable">
					<thead class="table table-info table-striped">
						<tr>
							<th>의약품번호</th>
							<th>의약품명</th>
							<th>제조업체</th>
							<th>수량</th>
						</tr>
					</thead>
					<tbody id="orderBody">
						<!-- 공지사항 리스트 들어오는 위치 -->
					</tbody>
				</table>
			</div>

		</div>

		<div class="grid-stack-item grid2" gs-x="6" gs-y="3" gs-w="6" gs-h="3">
			<div class="grid-stack-item-content tb">
				<!--<span style="font-size: 2em; font-weight:bolder; text-align: center;"  >약품 주문하기</span>-->
				<h3 id="productH4">요청 내역</h3>
				<table class="table table-bordered">
					<thead class="table table-info table-striped">
						<tr>
							<th>주문번호</th>
							<th>의약품명</th>
							<th>수량</th>
							<th>가격</th>
							<th>요청자</th>
							<th>주문 날짜</th>
						</tr>
					</thead>
					<tbody id="orderListBody">
						<!-- 공지사항 리스트 들어오는 위치 -->
					</tbody>
				</table>
			</div>

		</div>

	</div>

</body>




<script>

				// 드래그 앤 드랍 용 ----------------------------------------------------------------------
				var grid = GridStack.init({});
				$("tbody:not(.disable)").on("click", ".datatr", function (event) {
					$(this).siblings(".datatr").removeClass("active");
					$(this).toggleClass("active");
				});
				//------------------------------------------------------------------------------------ 




				// 게시물 리스트 조회용 --------------------------------------------------------------------

				const productList = () => {
					let listBody = $("#listBody").on('click', '.datatr', function(){
						let data = $(this).data("source");
						fn_order(data);
					});
					$.getJSON("${cPath}/product/list").done(function (resp) {
						let productList = resp

						console.log(resp);

						let producttrTags = [];
						if (productList.length > 0) {
							//정렬			productList.sort(function (a, b) {
							// 					//console.log(a,b)
							// 					if (a.boardDate <= b.boardDate) return 1;
							// 					return -1
							// 				});

							$.each(productList, function (idx, product) {
								let a = $("<a>").text(product.medicineKey);
								let trs = $("<tr>").append(
									$("<td>").addClass("dataValue1").html(a)
									, $("<td>").addClass("dataValue2").html(product.medicineName)
									, $("<td>").html(product.medicineReminder)
									, $("<td>").html(product.medicineEa)
									, $("<td>").html(product.medicineCompanyName)
									, $("<td>").html(product.medicineRoute)
									, $("<td>").html(product.medicineCost)
								).addClass("datatr").data("source", product);
								producttrTags.push(trs);
							});
						};
						console.log("empty 전");
						listBody.empty();
						console.log("empty 후");
						listBody.append(producttrTags);

					});

				}
				productList();

				
				// 약품목록 검색하기--------------------------------------------------
	            const inputId = $("#inputId")
	            inputId.on("keyup", function () {
	                let inputValue = inputId.val().toUpperCase();
	                let medicineTrtags = $(".medicineTrtags");

	                $.each(medicineTrtags, function (i, v) {
	                    let dataValue1 = $(this).find(".dataValue1").html();
	                    let dataValue2 = $(this).find(".dataValue2").html();
	                    if (dataValue1.toUpperCase().indexOf(inputValue) > -1) {
	                        $(this).show();
	                        return;
	                    } else {
	                        $(this).hide();
	                    }
	                    
	                    if (dataValue2.toUpperCase().indexOf(inputValue) > -1) {
	                        $(this).show();
	                    } else {
	                        $(this).hide();
	                    }
	            })
			});
	            // --------------------------------------------------------------

				let orderBody = $("#orderBody");
				// 주문 요청 버튼
				const fn_order = (productList) => {		// 약품목록에서 의약품번호를 클릭했을 때 약품주문하기 목록에 추가가되는 버튼
					console.log("여기가어디인지찾기", productList)
					let pl = `<input type='text' name='num'/>`;
					let deleteButton = $("<button>").text('삭제').on("click", function () {
						orderBody.empty();
					});

					let trs = $("<tr>").append(
						$("<td>").html(productList.medicineName)
						, $("<td>").html(productList.medicineKey)
						, $("<td>").html(productList.medicineCompanyName)
						, $("<td>").html(pl)
					).addClass("datatr").data("source", productList);

					console.log("empty 전");
					//orderBody.empty();
					console.log("empty 후");
					orderBody.append(trs);
				}

				const emptyBtn = () => {
					orderBody.empty();
				}



				// 주문하기 눌렀을때
				let requestTable = $('#requestTable');
				let orderRequest = $('#orderRequest');
				orderRequest.on('click', function () {	// 약품 주문하기 - 주문 요청 클릭
					console.log("이곳은 또 어디인고.....")
					let trTags = requestTable.find(".datatr");
					let pmList = [];
					$.each(trTags, function (idx, tr) {
						pmList.push({
							"medicineKey": $(tr).data("source").medicineKey,
							"orderQuantity": $('input[name=num]').eq(idx).val(),
							"orderCharger": `${authEmp.empName}`,
							"orderCost": ($('input[name=num]').eq(idx).val() * $(tr).data("source").medicineCost)
						})
					});
					console.log("pmList 목록!!!", pmList)
					$.ajax({
						type: "post",
						url: "${cPath}/order/orderList",
						contentType: 'application/json; charset=UTF-8',
						data: JSON.stringify(pmList),
						dataType: "text",
						beforeSend: function (xhr) {   /*데이터를 전송하기 전에 헤더에 csrf값을 설정한다*/
							xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
						},
						success: function (rslt) {
							console.log("인서트", rslt);
							orderBody.empty();
							orderList();
						}
					})
				});



				// 오더목록 조회
				const orderList = () => {
					$.getJSON("${cPath}/order/list").done(function (resp) {
						console.log("오더목록 가져오기", resp)
						let orderList = resp
						let orderListBody = $("#orderListBody")

						console.log(resp);

						let ordertrTags = [];
						if (orderList.length > 0) {
							//정렬			orderList.sort(function (a, b) {
							// 					//console.log(a,b)
							// 					if (a.boardDate <= b.boardDate) return 1;
							// 					return -1
							// 				});

							$.each(orderList, function (idx, order) {
								console.log("오더!",order);
								let trs = $("<tr>").append(
									$("<td>").html(order.orderRequestNo),
									$("<td>").html(order.medicineKey),
									$("<td>").html(order.orderQuantity),
									$("<td>").html(order.orderCost.toLocaleString() + '원'),
									$("<td>").html(order.orderCharger),
									$("<td>").html(order.orderDate.substring(0,10))
								)
								ordertrTags.push(trs);
							});
						};
						console.log("empty 전");
						orderListBody.empty();
						console.log("empty 후");
						orderListBody.append(ordertrTags);

					});
				}
				orderList();

			</script>