package kr.or.ddit.poi.controller;

import java.io.FileInputStream;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.patient.service.PatientService;
import kr.or.ddit.poi.service.PoiCostInsertService;
import kr.or.ddit.vo.PatientVO;
import kr.or.ddit.vo.PayDetailVO;
import kr.or.ddit.vo.PayVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/poi")
public class PoiController {

	@Inject
	private PatientService service;

	@Inject
	private PoiCostInsertService pservice;

    @GetMapping("/sample")
    public void sample(HttpServletRequest request, HttpServletResponse response,
    		@RequestParam String poiPatientKey
    		) throws Exception {

    	log.info("POI를 위한 환자키~~~~~~~~~~~~~~~~ {} ",poiPatientKey);
		PatientVO psmc = service.selectMedicalCertificate(poiPatientKey);

		log.info("psmc 서비스 실행 후 : {}", psmc);

        String filename = "";	// 내가 저장할 파일의 이름
        String formPath = request.getServletContext().getRealPath("/resources/ajm/excel/medicalcheck.xlsx"); // 양식파일 넣어두기

        log.info("파일경로 {}", formPath);
        InputStream fis = new FileInputStream(formPath);
        XSSFWorkbook form_wb = new XSSFWorkbook(fis);
        XSSFSheet form_sheet = form_wb.getSheetAt(0);

        //양식에 넣어줄 데이터
        String chartNo = psmc.getChart().getChartKey(); // 차트번호
        String name = psmc.getPatientName(); // 이름
        String gender = psmc.getPatientSex();
        String birth = String.valueOf(psmc.getPatientRegno1());
        String phone = psmc.getPatientPn();
        String add = psmc.getPAddress();
        String use = "병가";
        String code = psmc.getChart().getChartKey();
        String text = psmc.getDisease().getDiseaseNmKr() == null ? " " : psmc.getDisease().getDiseaseNmKr();
        Date nowDate = new Date();
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy년 MM월 dd일");
        String strNowDate = simpleDateFormat.format(nowDate);

//        CellStyle cellStyle = form_wb.createCellStyle();
//        cellStyle.setAlignment(HorizontalAlignment.CENTER);

        //엑셀 폼에 넣기 (로우와 셀 주의!!!)
        form_sheet.getRow(1).createCell(1).setCellValue(chartNo);   //  차트번호
        form_sheet.getRow(2).createCell(2).setCellValue(name);      // 엑셀 3행 C열
        form_sheet.getRow(2).createCell(5).setCellValue(gender);    // 2행 C열
        form_sheet.getRow(3).createCell(2).setCellValue(birth);
        form_sheet.getRow(3).createCell(5).setCellValue(phone);
        form_sheet.getRow(4).createCell(2).setCellValue(add);
        form_sheet.getRow(5).createCell(1).setCellValue(use);
        form_sheet.getRow(7).createCell(1).setCellValue(code);
        form_sheet.getRow(8).createCell(1).setCellValue(text);
        form_sheet.getRow(10).createCell(0).setCellValue(strNowDate);

        //form_sheet.getRow(10).createCell(0).setCellStyle();

        //파일 이름, 형식, 헤더 설정
        filename = "medicalcheck.xlsx";    // 파일 저장할 때 이름
        response.setContentType("ms-vnd/excel;charset=EUC-KR");
        response.setHeader("Content-Disposition", "attachment; filename=" + filename);
        form_wb.write(response.getOutputStream());
        form_wb.close();
    }

    /**
     * POI발급 버튼을 누르면 수납내역에 서류발급에 대한 금액이 추가되도록 하기
     * @param receiptKey
     * @return
     */
    @PostMapping(value = "/poicontrollerinsertPay", produces = "text/plain;charset=utf-8")
    @ResponseBody
    public String insertPay (@RequestParam String receiptKey) {
    	log.info("접수키가 잘 오는지 확인해보자!!!!!!!!!!!!!!!!!!!! {}", receiptKey);
    	int insertDocPay = pservice.insertDocPay(receiptKey);
    	return "성공 " + insertDocPay + "개";
    }


    /**
     * 수납이 완료된 후에 수납 내역 출력할 POI
     * @throws Exception
     */
    @GetMapping("/medicalbill")
    public void medicalbill(HttpServletRequest request, HttpServletResponse response,
                       @RequestParam("payKey") int payKey
    ) throws Exception {
        log.info("param 확인하기~~~~~~~~~~~~~~~~ {} ",payKey);

        PayVO payInfo =  pservice.selectReceipt(payKey);
        log.info("쿼리문에 파람값 넣고 확인 receipt : {}", payInfo);

        String filename = "";
        String formPath = request.getServletContext().getRealPath("/resources/ajm/excel/medicalbillreceipt.xlsx"); // 양식파일 넣어두기

        log.info("파일경로 {}", formPath);
        InputStream fis = new FileInputStream(formPath);
        XSSFWorkbook form_wb = new XSSFWorkbook(fis);
        XSSFSheet form_sheet = form_wb.getSheetAt(0);

        //양식에 넣어줄 데이터
        // 변수 선언하기
        String patientKey = "";
        String patientName = "";
        Integer patientBirth = 0;
        
    	Integer pk01 = 0; // 진찰
		Integer pk02 = 0; // 입원
		Integer pk03 = 0; // 처방
		Integer pk04 = 0; // 주사
		Integer pk05 = 0; // 처치 수술
		Integer pk06 = 0; // 검사료
		Integer pk07 = 0; // 물리치료
		Integer pk08 = 0; // xray
		Integer pk09 = 0; // MRI
		Integer pk10 = 0; // 도수치료
		Integer pk11 = 0; // 진료확인서
		Integer pk12 = 0; // 식대
		
        if(payInfo != null) {
    	PatientVO patient = payInfo.getPatient();
    	patientKey = patient.getPatientKey();
    	patientName = patient.getPatientName();
    	patientBirth = patient.getPatientRegno1();
        	
	
              
        	List<PayDetailVO> payDetailList = payInfo.getPayDetailList();
        	for (PayDetailVO payDetail : payDetailList) {
        		String payKind = payDetail.getPayKind();
        		switch (payKind) {
				case "PK01": if(payDetail.getPayCost() > 0) pk01 = payDetail.getPayCost(); break;
				case "PK02": if(payDetail.getPayCost() > 0) pk02 = payDetail.getPayCost(); break;
				case "PK03": if(payDetail.getPayCost() > 0) pk03 = payDetail.getPayCost(); break;
				case "PK04": if(payDetail.getPayCost() > 0) pk04 = payDetail.getPayCost(); break;
				case "PK05": if(payDetail.getPayCost() > 0) pk05 = payDetail.getPayCost(); break;
				case "PK06": if(payDetail.getPayCost() > 0) pk06 = payDetail.getPayCost(); break;
				case "PK07": if(payDetail.getPayCost() > 0) pk07 = payDetail.getPayCost(); break;
				case "PK08": if(payDetail.getPayCost() > 0) pk08 = payDetail.getPayCost(); break;
				case "PK09": if(payDetail.getPayCost() > 0) pk09 = payDetail.getPayCost(); break;
				case "PK10": if(payDetail.getPayCost() > 0) pk10 = payDetail.getPayCost(); break;
				case "PK11": if(payDetail.getPayCost() > 0) pk11 = payDetail.getPayCost(); break;
				case "PK12": if(payDetail.getPayCost() > 0) pk12 = payDetail.getPayCost(); break;
				}
			}
        }
      
        
        log.info("patientKey환자키 변수에 넣은 후 확인 : {}", patientKey);

        form_sheet.getRow(7).createCell(2).setCellValue(patientKey);
        form_sheet.getRow(7).createCell(5).setCellValue(patientName);
        form_sheet.getRow(7).createCell(9).setCellValue(patientBirth);
        form_sheet.getRow(13).createCell(3).setCellValue(pk01); // 진찰료
        form_sheet.getRow(15).createCell(3).setCellValue(pk12); // 식대
        form_sheet.getRow(21).createCell(3).setCellValue(pk06); // 검사료
        form_sheet.getRow(22).createCell(3).setCellValue(pk07); // 물리치료
        form_sheet.getRow(22).createCell(6).setCellValue(pk10); // 도수
        form_sheet.getRow(23).createCell(3).setCellValue(pk08); // xray
        form_sheet.getRow(24).createCell(3).setCellValue(pk09); // MRI
        
        
        //form_sheet.createRow(7).createCell(5).setCellValue(patientName);s

//        CellStyle cellStyle = form_wb.createCellStyle();
//        cellStyle.setAlignment(HorizontalAlignment.CENTER);
//        cellStyle.setVerticalAlignment(VerticalAlignment.CENTER);
//
//        Row row = form_sheet.createRow(7);
//        Cell cell = row.createCell(0);

        //cell.setCellStyle(cellStyle);


        //파일 이름, 형식, 헤더 설정
        filename = "medicalbillreceipt.xlsx";    // 파일 저장할 때 이름
        response.setContentType("ms-vnd/excel;charset=EUC-KR");
        response.setHeader("Content-Disposition", "attachment; filename=" + filename);
        form_wb.write(response.getOutputStream());
        form_wb.close();
    }

}
