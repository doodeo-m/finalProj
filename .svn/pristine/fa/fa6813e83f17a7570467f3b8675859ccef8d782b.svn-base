<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<style>
.grid-stack{
		height: 100hv;
	}
/* 	.grid-stack-item{ */
/* 		border-radius: 1rem;  */
/* 	} */
	.card{
		margin: 0;
		--vz-card-inner-border-radius : 1rem;
		background-color : white;
	}
	.card-header{
		border-radius: 30px;
		background-color : #405189;
		color : white;
	}
	.rtBtn{
		float: right;
	}
	.nav-tabs .nav-link.active{
		background-color: #405189;
		color: white;
	}
	#mtStartTable, #mtAssessTable, #mtActingTable{
		text-align: center;
	}
	#mtStartDiv{
		display: flex;
    	justify-content: space-around;
	}
	#mtStartDiv > div{
		width: 45%;
	}
	.mtPatientInfoTable th{
		width: 60px;
		text-align: center;	
		line-height: 50px;	
	}
	
	#mtDiagnosis{
		height: 80px;
    	padding: 20px;
	}
	
	#bodyImgTd{
		height: 550px;
	}
	
	#anatomyImg{
	    height: 500px;
    	width: 350px;
    	text-align: center;
    	position: absolute; 
	}
	#bodyCheck{
		width: 100%;
		height: 100%;
		position : relative;
		object-fit: none;
/* 		z-index: 1; */
	}
	.mtTableForm > thead{
		background-color: #405189c7;
		color: white;
	  }
	
</style>

<div class="grid-stack"> 
	
	<!-- 도수치료 대기환자목록 -->
	<div class="grid-stack-item" gs-x="0" gs-y="0" gs-w="3" gs-h="3">
		<div class="grid-stack-item-content form-control">
			<div class="item-header">
			<h5>도수치료 대기환자 조회</h5>
			<hr>
		</div>
		<div class="item-body">
			<div id="ptWaitingListDiv" style="height: 300px;">
				<table class="table table-bordered mtTableForm">
					<thead class='table-striped'>
						<tr>
							<th style="width: 10%">환자코드</th>
							<th style="width: 23%">환자명<br/>[성별/나이]</th>
							<th style="width: 12%">상태</th>
							<th style="width: 15%">처방시간</th>
							<th style="width: 15%">호출하기</th>
						</tr>
					</thead>
					<tbody id="mtWaitingListBody">
							<!-- 대기환자 목록 들어오는 위치 -->
					</tbody>
				</table>
			</div>
		</div>
		</div>
	</div>
	
	<div class="grid-stack-item" gs-x="0" gs-y="5" gs-w="3" gs-h="2">
		<div class="grid-stack-item-content form-control">
			<div class="item-header">
				<h5>환자 진료 차트</h5>
				<hr>
			</div> 
			<div class="item-body">
				<div id="patientChartDiv" style="height: 230px;">
					<table  class="table table-bordered" >
						<tr>
							<th style="width: 20%;">환자코드</th>
							<td id="chPatientKey"><!-- 차트 환자키 들어올 자리 --></td>
							<th style="width: 15%;">환자명</th>
							<td id="chPatientName"><!-- 환자명 들어올 자리 --></td>
						</tr>
						<tr>
							<th colspan=4">P.I</th>
						</tr>
						<tr>
							<td colspan=4" id="chPI">
							</td>
						</tr>
						<tr>
							<th  colspan=4">D.I</th>
						</tr>
						<tr>
							<td colspan=4" id="chDI">
							</td>
						</tr>
					</table>				
				</div>
			</div>	
			
		</div>		
	</div>

	<div class="grid-stack-item" gs-x="3" gs-y="0" gs-w="6" gs-h="5">
		<div class="grid-stack-item-content form-control">
		
			<div class="item-header">
				<h5>도수치료 진행</h5>
				<hr>
			</div>
			
			<div class="item-body">
				<div id="mtStartDiv">
					<div id="mtInfoDiv">
						<table class="table table-bordered mtPatientInfoTable">
							<thead>
								<tr>
									<th>환자명</th>
									<td id="mtStartPatientName"></td>
								</tr>
								<tr>
									<th>진단명</th>
									<td id="mtDiagnosis"></td>
								</tr>
							</thead>
							<tbody>
								<tr>
									<td colspan="2" id="bodyImgTd">
										<img id="anatomyImg" src="${pageContext.request.contextPath}/resources/images/mt_muscle_anatomy.jpg">
										<canvas id="bodyCheck"></canvas>
									</td>
								</tr>
							</tbody>
						</table>
					</div>
					
					<div id="navDiv">
					<h4>치료회차 : 회</h4>
						<!-- Nav tabs -->
						<ul class="nav nav-tabs mb-3" role="tablist">
							<li class="nav-item">
								<a class="nav-link active" data-bs-toggle="tab" href="#planTb" role="tab" aria-selected="false">
									계획</a></li>
							<li class="nav-item">
								<a class="nav-link" data-bs-toggle="tab" href="#assessTb" role="tab" aria-selected="false">
									평가</a></li>
							<li class="nav-item">
								<a class="nav-link" data-bs-toggle="tab" href="#actingTb" role="tab" aria-selected="false">
									액팅</a></li>
						</ul>
						<!-- Tab panes -->
						<div class="tab-content  text-muted">
							<div class="tab-pane active" id="planTb" role="tabpanel">
								<form id="mtSOAPform" method="post">
									<table class="table table-bordered" id="mtStartTable">
										<tr>
											<th>Subject</th>
											<td><input type="text" class="form-control" name="mtPlanS" id="subjectInput" placeholder="Subject 내용 입력"></td>
										</tr>
										<tr>
											<th>Object</th>
											<td><input type="text" class="form-control" name="mtPlanO" id="objectInput" placeholder="Object 내용 입력"></td>
										</tr>
										<tr>
											<th>Assessment</th>
											<td><input type="text" class="form-control" name="mtPlanA" id="assassInput" placeholder="Assessment 내용 입력"></td>
										</tr>
										<tr>
											<th>Plan</th>
											<td><input type="text" class="form-control" name="mtPlanP" id="planInput" placeholder="Plan 내용 입력"></td>
										</tr>
										<tr>
											<td colspan="2">
												<input type="hidden" name="${_csrf.parameterName}" value="${_csrf.token}" /> <!-- CSRF 토큰 추가 -->
												<input type="hidden" name="orderKey" value=""/>
												<input type="submit"  class="btn btn-primary" value="저장">
											</td>
										</tr>
									</table>
								</form>
							</div>
							
							<div class="tab-pane" id="assessTb" role="tabpanel"><!-- 평가 -->
								<form id="mtAssessform" method="post">
									<table class="table table-bordered" id="mtAssessTable">
										<tr>
											<th>
												관절가동범위[ROM]
												<span class="assessVal" id="romValPtag"></span>
											</th>	
											<td>
												<input type="range" class="form-range" name="mtRom" min="0" max="180" step="10" value="0" id="romRange">
  											</td>
										</tr>
										<tr>
											<th>
											근력[MMT]
											<span class="assessVal" id="mmtValPtag"></span>
											</th>
											<td>
												<input type="range" class="form-range" name="mtMmt" min="0" max="100" step="10" value="0"  id="mmtRange">
  											</td>
										</tr>
										<tr>
											<th>
											균형[BBS]
											<span class="assessVal" id="bbsValPtag"></span>
											</th>
											<td>
												<input type="range" class="form-range" name="mtBbs" min="0" max="56" value="0"  id="bbsRange">
 											</td>
										</tr>
										<tr>
											<th>
												통증<span class="assessVal" id="painValPtag"></span>
											</th>
											<td>
												<input type="range" class="form-range" name="mtPain" min="0" max="100" step="10" value="0"  id="painRange">
  											</td>
										</tr>
										<tr>
											<td colspan="2">
												<input type="hidden" name="${_csrf.parameterName}" value="${_csrf.token}" /> <!-- CSRF 토큰 추가 -->
												<input type="hidden" name="orderKey" value=""/>
												<input type="submit"  class="btn btn-primary" value="저장">
											</td>
										</tr>
									</table>
								</form>
							</div>
							
							<div class="tab-pane" id="actingTb" role="tabpanel">
								<h4>치료 코멘트 입력</h4>
								<form id="mtActingForm" method="post">
									<table class="table table-bordered" id="mtActingTable">
										<tr>
											<td colspan=4">
												<div class="form-floating">
													 <textarea class="form-control" name="mtRecordContent" placeholder="Leave a comment here" id="floatingTextarea2" style="height: 100px"></textarea>
													 <label for="floatingTextarea2">Comments</label>
												</div>
											</td>
										</tr>
										<tr>

											<td colspan="4">
												<input type="hidden" name="${_csrf.parameterName}" value="${_csrf.token}" /> <!-- CSRF 토큰 추가 -->
												<input type="hidden" name="orderKey" value=""/>
												<input type="hidden" name="receiptKey" value=""/>
												<input id="actingBtn" type="submit" class="btn btn-primary callBtn" value="액팅하기">
											</td>
										</tr>
									</table>
								</form>
							</div>
							
						</div> <!-- tabs content 끝-->
					</div>
				</div>
			</div>	
		</div>
	</div>
	
	<div class="grid-stack-item" gs-x="9" gs-y="0" gs-w="3" gs-h="3">
		<div class="grid-stack-item-content form-control">
			<div class="item-header">
				<H5>치료 히스토리</H5>
				<hr>
			</div>
			<div class="item-body">
				<div class="accordion" id="accordionPanelsStayOpenExample">
					<h5 style="text-align: center;">선택한 환자가 없습니다.</h5>
					<!-- 히스토리 리스트 들어오는 위치 -->
				</div>
			</div>
		</div>
	</div>
	
	<div class="grid-stack-item card" gs-x="9" gs-y="5" gs-w="3" gs-h="2">
		<div class="grid-stack-item-content form-control">
		
			<div class="item-header">
				<h5>환자 기능 그래프</h5>
				<hr>
			</div>
			<div class="item-body">
					<canvas id="mtChart"></canvas>
			</div>
		</div>
	</div>
	
</div>



<script>


//GridStack ------------------------------------------------------------------------------------
var grid = GridStack.init({});
$("tbody:not(.disable)").on("click", ".datatr", function(event){
	$(this).siblings(".datatr").removeClass("active");
	$(this).toggleClass("active");
});
//---------------------------------------------------------------------------------------------- 

// 스크롤 만들기 -----------------------------------------------------------------------------------
let ptWaitingListDiv = document.querySelector('#ptWaitingListDiv');
new SimpleBar(ptWaitingListDiv, { autoHide: true });

let patientChartDiv = document.querySelector('#patientChartDiv');
new SimpleBar(patientChartDiv, { autoHide: true });
// ---------------------------------------------------------------------------------------------

// 슬라이더 값 가져오기 -------------------------------------------------------------------------------

$(function(){
	$("#romRange").on("change", function(){
		const romRangeVal = $("#romRange").val(); 
		$("#romValPtag").html(romRangeVal);
	})
	$("#mmtRange").on("change", function(){
		const mmtRangeVal = $("#mmtRange").val(); 
		$("#mmtValPtag").html(mmtRangeVal);
	})
	$("#bbsRange").on("change", function(){
		const bbsRangeVal = $("#bbsRange").val(); 
		$("#bbsValPtag").html(bbsRangeVal);
	})
	$("#painRange").on("change", function(){
		const painRangeVal = $("#painRange").val(); 
		$("#painValPtag").html(painRangeVal);
	})
	
	
})


// ---------------------------------------------------------------------------------------------


// 도수치료 환자대기목록 -------------------------------------------------------------------------------

const mtWaitingListBody = $("#mtWaitingListBody");

const mtWaitingList = () => {
  $.getJSON("${pageContext.request.contextPath}/mtWaitingPatientList.do").done(function(resp) {
    let waitingList = resp;

    console.log(waitingList);

    let waitingTrTags = [];

    if (waitingList.length > 0) {
      $.each(waitingList, function(idx, waiting) {
    	  
    	let waitingStatusTd;
    	let ptIngSubmitBtn;
    	if (waiting.waitingList[0].waitingStatusName == "치료중") {
		      waitingStatusTd = $("<td style='color:#BD5108'>").html(waiting.waitingList[0].waitingStatusName);
		      ptIngSubmitBtn = $("<input style='background-color: #62b897; color : white;' class='mtStartCallSubmit btn btn-primary' type='submit' value='치료중'>")
		    } else {
		      waitingStatusTd = $("<td>").html(waiting.waitingList[0].waitingStatusName);
		      ptIngSubmitBtn = $("<input class='mtStartCallSubmit btn btn-primary callBtn' type='submit' value='호출'>");
		    }
    	 
        let trs = $("<tr>").append(
          $("<td>").html(waiting.patientKey),
          $("<td id='mtWaitName'>").html(waiting.patient.patientName + " [" + waiting.patient.patientSex + "/" + waiting.patient.patientAge + "]"),
          waitingStatusTd,
          $("<td>").html(waiting.waitingList[0].waitingChangeTime),
          $("<td>").append(
            $("<form class='mtStartCallForm' action='${pageContext.request.contextPath}/mtRecordInsert.do' method='post'>").append(
              $("<input type='hidden' name='${_csrf.parameterName}' value='${_csrf.token}' />"),
              $("<input type='hidden' name='orderKey' value='" + waiting.mchartList[0].orderKey + "'>"),
              $("<input type='hidden' name='mtWriter' value='E00031'>"),
              $("<input type='hidden' value='" + waiting.receiptKey + "' name='receiptKey'>"),
              $("<input type='hidden' value='" + waiting.patientKey + "' name='patientKey'>"),
//               $("<input class='mtStartCallSubmit btn btn-primary callBtn' type='submit' value='호출'>")
              ptIngSubmitBtn
            )
          ),
        ).addClass("datatr").data("source", waiting);
        waitingTrTags.push(trs);
        
      });
    } else {
      waitingTrTags.push(
        $("<tr>").html($("<td colspan='5'>").html("현재 대기환자가 없습니다."))
      );
    }

    mtWaitingListBody.empty();
    mtWaitingListBody.append(waitingTrTags);
  });
  
}
mtWaitingList();

// ------------------------------------------------------------------------------------------------------------------------------------
const fn_clickCallBtn = () =>{
	console.log("실행되니?");
	// $('.callBtn').prop('disabled', true).css('background-color', '#646a79');
}

mtWaitingListBody.on("submit", ".mtStartCallForm", function(event) {
  event.preventDefault();
  console.log("호출버튼 눌렀다");
  fn_clickCallBtn();
  
  let orderKey = $(this).find(".mtStartCallSubmit").closest("form").find("[name='orderKey']").val();
  let mtwriter = $(this).find(".mtStartCallSubmit").closest("form").find("[name='mtWriter']").val();
  let receiptKey = $(this).find(".mtStartCallSubmit").closest("form").find("[name='receiptKey']").val();
  let patientKey = $(this).find(".mtStartCallSubmit").closest("form").find("[name='patientKey']").val();
  console.log("orderKey 왔니 : ", orderKey);

  // 하드코딩 - 로그인 한 직원 코드 들어가야 함 ***********************
  let data = {
    orderKey: orderKey,
    mtwriter: mtwriter,
    receiptKey : receiptKey
  }

  $.ajax({
  	method : "POST",
  	url : "${pageContext.request.contextPath}/mtRecordInsert.do?receiptKey=" + receiptKey,
  	data : JSON.stringify(data),
  	contentType : 'application/json; charset=utf-8',
  	dataType : "text",
  	beforeSend: function (xhr) {   /*데이터를 전송하기 전에 헤더에 csrf값을 설정한다*/
  		xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
  	}, 
  	success : function(resp) {
  		console.log(resp);
  		mtWaitingListBody.empty();
  		mtWaitingList();
  		// patientName, diEnName 들어가야 함.
  		fn_callMtStart(orderKey);
  		$("#actingBtn").data("receiptkey",receiptKey);
		$("#accordionPanelsStayOpenExample").empty();
		fn_mtRecHistoryList(patientKey);
		// chart 함수 : patientKey 들어가야함. -----------------------> 안뜬다 !
		// fn_chartMt("P00044");
  	},
  	error: function (request, status, error) {
  		console.log("code: " + request.status);
  		console.log("message: " + request.responseText);
  		console.log("error: " + error);
  		}
  });

  return false;
});


// ----------------------------------------------------------------------------------------------

//치료 진행에 환자 정보 불러오기 ----------------------------------------------------------------
const fn_callMtStart = (orderKey) =>{
	
	// 환자명, 진단명 가져오기
	$.getJSON("${pageContext.request.contextPath}/mtStartPatientInfoDetail.do?orderKey="+orderKey).done(function(resp){
		let detailInfo = resp
		console.log("detailInfo: ", detailInfo);

		$("#mtStartPatientName").html(detailInfo.patientName);
		$("#mtDiagnosis").html(detailInfo.mchartList[0].dianosis.diease.diseaseNmEn);
		
		let bodyPartKey = detailInfo.mchartList[0].orderHistoryList[0].bodyPartKey;
		console.log("bodyPartKey: ", bodyPartKey);

		fn_bodyImageDraw(bodyPartKey);
		

		let orderKey = detailInfo.mchartList[0].orderKey;
		$("#mtAssessform").find("[name=orderKey]").val(orderKey);

	});	
	
	
}

const fn_bodyImageDraw = (bodyPartKey) =>{

const canvas = document.getElementById('bodyCheck');

	canvas.setAttribute("width", window.innerWidth);
    canvas.setAttribute("height", window.innerHeight);
    
    var ctx = canvas.getContext('2d');
    ctx.beginPath();

    
	switch (bodyPartKey) {
			case "B001":	// 어께
				ctx.arc(1000, 230, 30, 0, 2*Math.PI);
				break;
			case "B002":	// 팔
				ctx.arc(1020, 300, 30, 0, 2*Math.PI, false);
				break;
			case "B003":	// 손목
				ctx.arc(1045, 350, 20, 0, 2*Math.PI);
				break;
			case "B004":	// 엄지
				ctx.arc(1075, 355, 15, 0, 2*Math.PI);
				break;
			case "B005":	// 손가락
				ctx.arc(1060, 365, 25, 0, 2*Math.PI);
				break;
			case "B006":	// 고관절
				ctx.arc(980, 365, 40, 0, 2*Math.PI);
				break;
			case "B007":	// 무릎
				ctx.arc(975, 485, 30, 0, 2*Math.PI);
				break;
			case "B008":	// 발목
				ctx.arc(975, 570, 30, 0, 2*Math.PI);
				break;
			case "B009":	// cervical
				ctx.arc(945, 200, 30, 0, 2*Math.PI);
				break;
			case "B010":	// thoracic
				ctx.arc(945, 250, 30, 0, 2*Math.PI);
				break;
			case "B011":	// lumber
				ctx.arc(945, 300, 30, 0, 2*Math.PI);
				break;
			case "B012":	// sacrum
				ctx.arc(945, 350, 30, 0, 2*Math.PI);
				break;
			case "B013":
				ctx.arc(945, 350, 20, 0, 2*Math.PI);
				break;
			default:
				break;
		}

		
	ctx.strokeStyle = "#405189";
	ctx.fillStyle = "rgba(64, 81, 137, 0.78)";
	ctx.stroke();
    ctx.fill();
    
}
// fn_bodyImageDraw("B001");
// 도수치료기록지  평가 업데이트 ------------------------------------------------------------------
const mtAssessform = $("#mtAssessform")

mtAssessform.on("submit", function(event){
	event.preventDefault();
	let romRange = $("[name=mtRom]").val();
	let mmtRange = $("[name=mtMmt]").val();
	let bbsRange = $("[name=mtBbs]").val();
	let PainRange = $("[name=mtPain]").val();

	let orderKey = $("[name=orderKey]").val();

	let assassData = {
		mtRom : mmtRange,
		mtMmt : romRange,
		mtBbs : bbsRange,
		mtPain : PainRange,
		orderKey : orderKey
	}

	$.ajax({
		method : "POST",
		url : "${pageContext.request.contextPath}/mtAssessmentUpdate.do",
		data : JSON.stringify(assassData),
		contentType : 'application/json; charset=utf-8',
		dataType : "text",
		beforeSend: function (xhr) {   /*데이터를 전송하기 전에 헤더에 csrf값을 설정한다*/
			xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
		}, 
		success : function(resp) {
			console.log(resp);
			// patientKey 넣어야해요
			// fn_chartMt("P00044");
		},
		error: function (request, status, error) {
			console.log("code: " + request.status);
			console.log("message: " + request.responseText);
			console.log("error: " + error);
		}

	});
	
	return false;
});


// ----------------------------------------------------------------------------------------------

// 도수치료기록지 SOAP 업데이트 ------------------------------------------------------------------
const mtSOAPform = $("#mtSOAPform")

mtSOAPform.on("submit", function(event){
	event.preventDefault();
	let mtPlanS = $("[name=mtPlanS]").val();
	let mtPlanO = $("[name=mtPlanO]").val();
	let mtPlanA = $("[name=mtPlanA]").val();
	let mtPlanP = $("[name=mtPlanP]").val();

	let orderKey = $("[name=orderKey]").val();


	let planData = {
		mtPlanS : mtPlanS,
		mtPlanO : mtPlanO,
		mtPlanA : mtPlanA,
		mtPlanP : mtPlanP,
		orderKey : orderKey
	}

	$.ajax({
		method : "POST",
		url : "${pageContext.request.contextPath}/mtPlanUpdate.do",
		data : JSON.stringify(planData),
		contentType : 'application/json; charset=utf-8',
		dataType : "text",
		beforeSend: function (xhr) {   /*데이터를 전송하기 전에 헤더에 csrf값을 설정한다*/
			xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
		}, 
		success : function(resp) {
			console.log(resp);
		},
		error: function (request, status, error) {
			console.log("code: " + request.status);
			console.log("message: " + request.responseText);
			console.log("error: " + error);
		}

	});
	
	return false;
});


// ----------------------------------------------------------------------------------------------


// 도수치료기록지  액팅 코멘트 업데이트 ------------------------------------------------------------------
const mtActingForm = $("#mtActingForm")

mtActingForm.on("submit", function(event){
	event.preventDefault();
	let mtRecordContent = $("[name=mtRecordContent]").val();
	let orderKey = $("[name=orderKey]").val();

	let receiptKey =  $("#actingBtn").data("receiptkey");

	let commentData = {
		mtRecordContent : mtRecordContent,
		orderKey : orderKey
	}

	$.ajax({
		method : "POST",
		url : "${pageContext.request.contextPath}/mtCommentUpdate.do?receiptKey="+receiptKey,
		data : JSON.stringify(commentData),
		contentType : 'application/json; charset=utf-8',
		dataType : "text",
		beforeSend: function (xhr) {   /*데이터를 전송하기 전에 헤더에 csrf값을 설정한다*/
			xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
		}, 
		success : function(resp) {
			console.log(resp);
			$("[name=mtPlanS]").val("");
			$("[name=mtPlanO]").val("");
			$("[name=mtPlanA]").val("");
			$("[name=mtPlanP]").val("");
			$("[name=mtRom]").val("");
			$("[name=mtMmt]").val("");
			$("[name=mtBbs]").val("");
			$("[name=mtPain]").val("");
			$("[name=mtRecordContent]").val();
			mtWaitingListBody.empty();
			mtWaitingList();
		},
		error: function (request, status, error) {
			console.log("code: " + request.status);
			console.log("message: " + request.responseText);
			console.log("error: " + error);
		}

	});
	
	return false;
});


// ----------------------------------------------------------------------------------------------


// 환자 도수치료 히스토리 리스트 --------------------------------------------------------------------------

// patientKey 넣어야함.
const fn_mtRecHistoryList = (patientKey) =>{
	
	$.getJSON("${pageContext.request.contextPath}/mtRecHistoryList.do?patientKey=" + patientKey).done(function(resp){
		let historyResp = resp;
		console.log("response: ", historyResp);

		if(historyResp.length > 0){
			$.each(historyResp, function(idx, history){
				var accordionId = "accordion" + idx;
				
				console.log("histoy.rownum : ", history.rownum);	

				$("#accordionPanelsStayOpenExample").append(
					$("<div class='accordion-item'>").append(
						$("<h2 class='accordion-header' id='" + accordionId + "-heading'>").append(
						$("<button class='accordion-button collapsed' type='button' data-bs-toggle='collapse' data-bs-target='#" + accordionId + "-collapse' aria-expanded='false' aria-controls='" + accordionId + "-collapse'>").html("No." + history.rownum +" "+ history.mtRecordDate)
						)
					),
					$("<div id='" + accordionId + "-collapse' class='accordion-collapse collapse' aria-labelledby='" + accordionId + "-heading' data-bs-parent='#accordionPanelsStayOpenExample'>").append(
						$("<div class='accordion-body' style='display:flex; justify-content:space-around;'>").append(
							$("<div id='soapDiv'>").append(
								$("<p>").html("Subject : " + history.mtPlanS),
								$("<p>").html("Oject : " + history.mtPlanO),
								$("<p>").html("Assassment : " + history.mtPlanA),
								$("<p>").html("Plan : " + history.mtPlanP)
							),
							$("<div id='assassDiv' style='border-right: 1px solid #878a99; border-left: 1px solid #878a99; padding-right:20px; padding-left:20px;'>").append(
								$("<p>").html("ROM : " + history.mtRom),
								$("<p>").html("MMT : " + history.mtMmt),
								$("<p>").html("BBS : " +history. mtBbs),
								$("<p>").html("Pain : " + history.mtPain)
							),
							$("<div id='commentDiv'>").append(
								$("<p>").html("Comment : " + history.mtRecordContent)
							)
						)
					)
					).addClass("datatr").data("source", history);

				});
		}else{
			$("#accordionPanelsStayOpenExample").append(
				$("<h4>").text("도수치료 히스토리가 없습니다.")
			)
		}
	});
	
} 

// ----------------------------------------------------------------------------------------------


// 환자 기능 그래프 ----------------------------------------------------------------------------------
const fn_chartMt = (patientKey) => {
  let romData = [];
  let mmtData = [];
  let bbsData = [];
  let painData = [];

  let dateData = [];

  $.getJSON("${pageContext.request.contextPath}/mtChartDataList.do?patientKey=" + patientKey).done(function(resp) {
    let chartData = resp;
    console.log("chartData: ", chartData);

    $.each(chartData, function(idx, data) {
      romData.push(data.mtRom);
      mmtData.push(data.mtMmt);
      bbsData.push(data.mtBbs);
      painData.push(data.mtPain);
	  dateData.push(data.mtRecordDate);
    });

    console.log("차트 만들어");
  });
  
  const ctCtx = document.querySelector('#mtChart');
  
   // 데이터 정의
   const data = {
    labels: dateData,
    datasets: [
      {
        label: '관절가동범위',
        // data: [10, 20, 30, 25, 35, 40],
        data: romData,
        borderColor: 'red',
        fill: false
      }
	  
      ,{
        label: '근력',
        data: mmtData,
        borderColor: 'blue',
        fill: false
      }
      ,{
        label: '유연성',
        data: bbsData,
        borderColor: 'green',
        fill: false
      }
      ,{
        label: '통증',
        data: mmtData,
        borderColor: 'yellow',
        fill: false
      }
    ]
  };

  // 그래프 옵션 설정
  const options = {
    responsive: true,
    scales: {
      y: {
        beginAtZero: true,
		max: 100
      }
    }
  };
  
  // 라인 그래프 생성
  const myChart = new Chart(ctCtx, {
    type: 'line',
    data: data,
    options: options
  });
  

 
};
fn_chartMt("P00065");



// ----------------------------------------------------------------------------------------------



//  환자 진료 차트 상세 --------------------------------------------------------------------------

// let fn_patientChartDetail = (patientKey, waitingKey) =>{
	
// 	console.log(patientKey);
// 	console.log(waitingKey);
	
// 	$("#mtChPatientName").text("");
// 	$("#mtChPatientAge").text("");
// 	$("#mtChPatientPN").text("");
// 	$("#mtChPatienAddr").text("");
// 	$("#mtChGuardianName").text("");
// 	$("#mtChGuardianPN").text("");
	
// 	$.getJSON("${pageContext.request.contextPath}/patientChartDetail.do?patientKey="+patientKey+"&waitingKey="+waitingKey).done(function(resp){
		
// 		let chResp = resp;
		
// 		console.log(chResp);

// 		$("#mtChPatientName").text(chResp.patient.patientName);
// 		$("#mtChPatientAge").text(chResp.patient.patientAge+"/"+chResp.patient.patientSex);
// 		$("#mtChPatientPN").text(chResp.patient.patientPn);
// 		$("#mtChPatienAddr").text(chResp.patient.patientAddress);
// 		$("#mtChGuardianName").text(chResp.patient.guardian.guardianName);
// 		$("#mtChGuardianPN").text(chResp.patient.guardian.guardianPN);
		
// 		$("#mtChPI").html(
// 				"- C.C : " + chResp.receiptReason + "<br>"
// 				+ "- S/P : " + chResp.patient.preDiagnosis.preDiagnosisExperience + "<br>"
// 				+ "- P/Hx : " + chResp.patient.preDiagnosis.preDiagnosisDisease + "<br>"
// 				+ "- allergic : " + chResp.patient.preDiagnosis.preDiagnosisAllergy + "<br>"
// 				+ "- 임신유무 : " + chResp.patient.preDiagnosis.preDiagnosisPregnancy + "<br>"	
// 				);
// 		$("#mtChDI").html(
// 			"- Dx : " + chResp.mchartList[0].dianosis.diease.diseaseNmEn + "<br>"
// 			+ "- comment : " + chResp.mchartList[0].chartCont
// 		);
// 	})
// }

// ----------------------------------------------------------------------------------------------

</script>