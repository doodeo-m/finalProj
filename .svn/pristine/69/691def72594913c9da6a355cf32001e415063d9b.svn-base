<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://www.springframework.org/security/tags"  prefix="security" %>


<style type="text/css">
	.datatr:hover {
		background-color: #C1D3BA;
	}
	.datatr.active {
		background-color: #9AEDE3;
	} 
	.grid-stack{
		height: 150hv;
	}
	#mySimplebar, #mySimplebar2,  #mySimplebar3 {
		border: 1px solid grey;
		width: 100%;
		max-height: 150px;
	}
	#mySimplebar4{
		border: 1px solid grey;
		width: 100%;
		max-height: 200px;
	}
	#waitingSimplebar{
		border: 1px solid grey;
		width: 100%;
		max-height: 650px;
	}
	#cardbar{
		width: 100%;
		max-height: 500px;
	}
	.card{
		--vz-card-inner-border-radius : 2rem;
		background-color : white;
		padding: 10px;
	}
	.card-header{
		background-color : #405189;
		color : white;
	}
	#serchKeyWord, #SserchKeyWord{
		width: 130px;
		display: inline;
	}
	.rtBtn{
		float: right;
	}
	.pNum{
		width: 30px;
	}
	.nav-tabs .nav-link.active{
		background-color: #405189;
		color: white;
	}
	
	.grid-stack-item{
		border-radius: 2rem; 
	}
	table{
		text-align: center;
	}
	.modal{
		--vz-modal-width: 700px;
	}
	.form-select{
		width: 200px;
		display: inline;
		float: left;
	}
</style>

 <div class="grid-stack">

	<div class="grid-stack-item card" gs-x="0" gs-y="0" gs-w="2" gs-h="5">
		<div class="card-header">대기환자목록</div>
		<div class="card-body">
			<div class="grid-stack-item-content">
			<h4>- ${authEmp.officeName }</h4><br>
			<div id="waitingSimplebar">
				<table class="table table-bordered">
					<tbody id="waitingTB"></tbody>
				</table>
			</div>
			</div>
		</div>
	</div>


	<div class="grid-stack-item card" gs-x="2" gs-y="0" gs-w="3" gs-h="3">
		<div class="card-header">환자 정보 및 예진표</div>
		<div id="cardbar">
		<div class="card-body">
			<div class="grid-stack-item-content">
			<h4>- 환자 정보
				<button type="button" class="btn btn-success btn-sm rtBtn" id="preCheckBtn"
				data-bs-toggle="modal" data-bs-target="#preCheckModal">예진표확인</button>
			</h4>
				<table class="table table-bordered">
					<thead><tr><th>이름</th><th>생년월일</th><th>나이</th><th>유형</th></tr></thead>
					<tbody id="PInfoTbody"><tr><td></td><td></td><td></td><td></td></tr>
					<tr><th>증상</th><td colspan="3"></td></tr></tbody>
				</table><hr>
					<div id="preChartDiv">
					<p>과거 진료차트 목록</p>
						<div id="mySimplebar">
							<table class="table table-bordered">
								<thead><th>접수번호</th><th>차트번호</th><th>작성일</th></thead>
								<tbody id="preChartList"></tbody>
							</table>
						</div>
					</div>
				</div>
			</div>
		</div><!-- 카드 심플바-->
		</div>


	<div class="grid-stack-item card" gs-x="5" gs-y="0" gs-w="4" gs-h="5">
		<div class="card-header">진료차트</div>
		<div class="card-body">
			<div class="grid-stack-item-content">
				<div style="float: left; display: inline;">차트번호 : <span id="mChartNo"></span></div>
				<div style="float: right; display: inline;">작성날짜 : <span id="mChartDate"></span></div>
			<br>
			<h5>- 진단내역</h5>
			<form name="inputForm" method="post">
				<security:csrfInput/>
				<table class="table table-bordered">
					<thead><tr><th>상병코드</th><th colspan="2">상병명</th></tr></thead>
					<tbody id="ck_disease">
						<tr data-bs-toggle="modal" data-bs-target="#addDisModal" >
							<td colspan="2" ><i class="bx bx-plus-circle fs-22"></i></td>
						</tr>
					</tbody>
				</table>
			</form>
				<hr><h5>-처방내역</h5>
				<form name="inputForm" method="post">
					<security:csrfInput/>
					<table class="table table-bordered">
						<thead><tr><th>약품코드</th><th>약품명</th><th>단위</th><th>일투</th><th colspan="2">총투</th></tr></thead>
						<tbody id="ck_mediList"></tbody>
						<tfoot><tr data-bs-toggle="modal" data-bs-target="#addMedicineModal" >
								<td colspan="6" ><i class="bx bx-plus-circle fs-22"></i></td>
								</tr></tfoot>
					</table>
				</form>
					<hr><h5>-오더 내역</h5>
					<form name="inputForm" method="post">
						<!-- <security:csrfInput/> -->
						<div id="orderDiv">
						<table class="table table-bordered" id="preOrderTable"></table><!-- 기존 오더 테이블 -->
						<table class="table table-bordered" id="orderTable">
							<thead><tr><th>오더종류</th><th colspan="2">오더내용</th></tr></thead>
							<tbody id="orderList"></tbody>
						</table>
						</div>
					</form>
					<div id="mChartBtns">
						<input type="button" value="저장" id="saveChartBtn" class="btn btn-primary rtBtn" >
						<input type="button" value="닫기" id="closeChartBtn" class="btn btn-danger rtBtn" >
					</div>
				</div>
			</div>
		</div>
	
	
	<div class="grid-stack-item card" gs-x="2" gs-y="5" gs-w="3" gs-h="2" >
		<div class="card-header">서류발급</div>
		<div class="card-body">
			<div class="grid-stack-item-content">
				서류발급
			</div>
		</div>
	</div>
		
					
		<div class="grid-stack-item card" gs-x="10" gs-y="0" gs-w="3" gs-h="2" >
			<div class="card-header">캘린더</div>
			<div class="card-body">
				<div class="grid-stack-item-content">
					<div>캘린더</div>
					<hr>
					<div>메모장</div>
					</div>
				</div>
			</div>
					
		<div class="grid-stack-item card" gs-x="10" gs-y="3" gs-w="3" gs-h="3" >
			<div class="card-header">오더선택</div>
			<div class="card-body">
				<div class="grid-stack-item-content">
					<h4>- 오더 지시</h4>
				<!-- Nav tabs -->
				<ul class="nav nav-tabs mb-3" role="tablist">
					<li class="nav-item">
						<a class="nav-link active" data-bs-toggle="tab" href="#radiologyTb" role="tab" aria-selected="false">
							영상</a></li>
					<li class="nav-item">
						<a class="nav-link" data-bs-toggle="tab" href="#therapyTb" role="tab" aria-selected="false">
							치료</a></li>
					<li class="nav-item">
						<a class="nav-link" data-bs-toggle="tab" href="#surgeryTb" role="tab" aria-selected="false">
							수술
						</a></li>
					<li class="nav-item">
						<a class="nav-link" data-bs-toggle="tab" href="#groupOrderTb" role="tab" aria-selected="false">
							그룹오더
						</a></li>
				</ul>
				<!-- Tab panes -->
				<div class="tab-content  text-muted">
					<div class="tab-pane active" id="radiologyTb" role="tabpanel">
						<table class="table table-bordered">
							<thead><tr><th>종류</th><th>오더선택</th></tr></thead>
							<tbody>
								<tr><th>x-Ray</th>
									<td><i class="bx bx-check-circle fs-22 orderCk"></i></td></tr>
								<tr><th>MRI</th>
									<td><i class="bx bx-check-circle fs-22 orderCk"></i></td></tr>
								</tbody></table> 
						<input type="button" value="영상 결과 확인"  
								data-bs-toggle="modal" data-bs-target="#radiologyCheckModal"class="btn btn-primary rtBtn">
					</div>
					
					<div class="tab-pane" id="therapyTb" role="tabpanel"><!-- 물리치료 -->
						
						<table class="table table-bordered">
							<tr><th>종류</th> <th colspan="2">오더 선택</th></tr>
							<tr><th>물리치료</th>
								<td><i class="bx bx-check-circle fs-22 orderCk"></i></td>
							</tr>
							<tr><th>도수치료</th>
								<td><i class="bx bx-check-circle fs-22 orderCk"></i></td></tr>
						</table>

					</div>
					<div class="tab-pane" id="surgeryTb" role="tabpanel">
						<table class="table table-bordered">
							<thead><tr><th>수술코드</th><th colspan="2">수술 명칭</th></tr></thead>
								<tbody id="surgeryTBody">
									<tr data-bs-toggle="modal" data-bs-target="#addsurgeryModal" >
										<td colspan="3" ><i class="bx bx-plus-circle fs-22"></i></td>
									</tr>
								</tbody>
						</table> 
					</div>
					<div class="tab-pane" id="groupOrderTb" role="tabpanel">
						<p>그룹오더 선택</p>
					</div>
				</div> <!-- tabs content 끝-->
				</div>
			</div>
		</div>

</div><!-- grid-stack 끝-->


<!-- 예진표 Modal -->
<div class="modal fade" id="preCheckModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="staticBackdropLabel">예진표</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body" id="preDisModalBody">
		<table class="table table-bordered">
			<thead><th>번호</th><th>이름</th><th>나이</th></thead>
			<tbody id="preDisIngfoPatient"></tbody>
			<br>
		</table class="table table-bordered">
		<table class="table table-bordered">
			<tbody id="preDisInfotable"></tbody>
		</table>
      </div>
	  <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
      </div>
    </div>
  </div>
</div>

<!-- 영상자료 체크 Modal -->
<div class="modal fade" id="radiologyCheckModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="staticBackdropLabel">영상결과 확인</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        영상결과 체크
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Understood</button>
      </div>
    </div>
  </div>
</div>

<!-- 진단내역 추가 Modal -->
<div class="modal fade" id="addDisModal" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="staticBackdropLabel">진단내역 추가</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
		<div>
			상병명칭 검색 &nbsp;&nbsp;&nbsp;&nbsp;
			<input type="text" name="keword" class="form-control" id="Dis_serchKeyWord" placeholder="진단명 검색.." >
			</div>
			<div id="Disbar" style="height: 600px;">
			<table class="table table-bordered">
				<thead><tr><th>상병코드</th><th>상병명</th></tr></thead>
				<tbody id="Dislist">
				</tbody>
			</table>
		</div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
      </div>
    </div>
  </div>
</div>

<!-- 수술 모달 Modal -->
<div class="modal fade" id="addsurgeryModal" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="staticBackdropLabel">수술예약 추가</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
		<div>
			수술명 검색 &nbsp;&nbsp;&nbsp;&nbsp;
			<input type="text" name="keword" class="form-control" id="Sur_serchKeyWord" placeholder="수술명 검색.." >
			</div>
			<div id="sugerybar" style="height: 600px;">
			<table class="table table-bordered">
				<thead>
					<tr><th>수술코드</th><th>수술명</th><th>금액</th></tr>
				</thead>
				<tbody id="surgeryTB">
				</tbody>
			</table>
		</div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
      </div>
    </div>
  </div>
</div>


<!-- 처방내역 추가 Modal -->
<div class="modal fade" id="addMedicineModal" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="staticBackdropLabel">처방내역 추가</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
		<div>
			약물명칭 검색 &nbsp;&nbsp;&nbsp;&nbsp;
			<input type="text" name="keword" class="form-control" id="searhMedicineInput" placeholder="의약품코드/의약품명으로 검색" >
			</div>
			<div id="Medibar" style="height: 400px;">
				<table class="table table-bordered">
					<thead><tr><th>의약품코드</th><th>의약품명</th><th>투여</th></tr></thead>
					<tbody id="mediList">
					</tbody>
				</table>
			</div>
			<br>
			<p>약품선택</p>
			<div>
				<table class="table table-bordered">
					<thead><tr><th>약품코드</th><th>약품명</th><th>단위</th><th>일투</th><th colspan="2">총투</th></tr></thead>
					<tbody id="selectMedicineList"></tbody>
				</table>
			</div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
        <button type="button" class="btn btn-success" id="ck_PrescriptBtn">확인</button>
      </div>
    </div>
  </div>
</div>

	

<script>
// 그리드스택 생성
var grid = GridStack.init({});


let skey = "";
let sval = "";
let inputForm = $('[name=inputForm]');
let preCheckModal = $('#preCheckModal');// 예진표 모달
let radiologyCheckModal = ('#radiologyCheckModal'); // 영상결과 체크 모달

let addsurgeryModal = $('#addsurgeryModal').on('show.bs.modal', function(){
	fn_surgeyList(surgeryListAll); // 수술 목록 셋팅
})
// 진단목록 모달
let addDisModal = $('#addDisModal').on('show.bs.modal', function(){
	fn_disease(diseaseListAll); // 진단목록 셋팅
})
let DisIngBtn = $(document).on('click', '.DisIngBtn', function(){
	$(this).attr({'Class' : 'btn btn-primary callBtn'}).html('호출');
	$(".callBtn").prop('disabled', false);
})
let addMedicineModal = $('#addMedicineModal').on('show.bs.modal', function(){
	// 기존에 선택된 요소들 가져와서 붙이기
	let originList = ck_mediList.children();
	selectMedicineList.empty().append(originList);
	fn_medicine(); // 리스트 출력
})
$(document).on('click', '.dels', function(){ $(this).parents('tr').remove(); })
$('.orderCk').on('click', function(){
	let selectOrderTr = $(this).parents("tr"); // tr선택
	let selectTh = selectOrderTr.find('th').text();
	let bodyOpt = fn_bodyPartOpt(bodyListAll);
	let therapyOpt = fn_therapyOpt(therapyEqListAll);
	let	inputbodyTag = `<select class='form-select selectBodyPart' name='bodyPartKey'>\${bodyOpt}</select>`
	let selectTherapyTags = `<select class='form-select selectTherapy' name='equipmentKey'>\${therapyOpt}</select>`
	let Tags = '';	
		switch(selectTh){
			case "x-Ray" : Tags += inputbodyTag; break; 
			case "MRI" : Tags += inputbodyTag; break;
			case "물리치료" : Tags += selectTherapyTags + inputbodyTag; break; 
			case "도수치료" : Tags += '도수치료 선택';  break; }
	let trs = `<tr class='selectOrderList'><th name='orderKind'>\${selectTh}</th><td>\${Tags}</td><td><i class="bx bx-minus-circle fs-22 dels"></i></td>`
	orderList.append(trs);
})

let S_orderCk= $(document).on('click', '.S_orderCk', function(){
	let surgery = $(this).parent().prev().parent().data('source');
	let trTags = $('<tr>').append($('<th name="orderKind">').html("수술")
				, $('<td>').html(`수술코드 : \${surgery.surgeryKindKey}<br>수술명 : \${surgery.surgeryKindName}`)
				, $('<td>').html(`<i class="bx bx-minus-circle fs-22 dels"></i>`)).data('source', surgery).addClass('selectOrderList');
	orderList.append(trTags);
})

// 예진표 조회
let preDisIngfoPatient = $('#preDisIngfoPatient')
let preDisInfotable = $('#preDisInfotable')
let preCheckBtn = $('#preCheckBtn').on('click', function() {
	let patient = preCheckBtn.data('patient');
	let preDisagnosis = patient.preDiagnosis;

	let trTags1 = [];
	let preDiagnosisPregnancy = preDisagnosis.preDiagnosisPregnancy == 'N' ? '없음' : '있음';
	let tr1 = $('<tr>').append(
					$('<td>').html(patient.patientKey)
					, $('<td>').html(patient.patientName)
					, $('<td>').html(patient.patientAge))
	trTags1.push(tr1);
					
	let trTags2 = [];				
	if( preDisagnosis.preDiagnosisKey != null){
		let tr2 = [
			$('<tr>').append($('<th>').html("수술경험"), $('<td>').html(preDisagnosis.preDiagnosisExperience))
			, $('<tr>').append($('<th>').html("질환여부"), $('<td>').html(preDisagnosis.preDiagnosisDisease))
			, $('<tr>').append($('<th>').html("특이체질/알러지"), $('<td>').html(preDisagnosis.preDiagnosisAllergy))
			, $('<tr>').append($('<th>').html("임신여부"), $('<td>').html(preDiagnosisPregnancy))
			, $('<tr>').append($('<th>').html("병원선택 이유"), $('<td>').html(preDisagnosis.preDiagnosisChoice))
			]
		trTags2 =tr2;
	}else{ trTags2 = `<tr><td colspan='2'>해당환자의 예진표가 등록되지 않았습니다.<td></tr>` }
	// 환자정보 입력
	preDisIngfoPatient.empty().append(trTags1);
	// 예진표 정보 입력
	preDisInfotable.empty().append(trTags2)
})

// 첫화면 로딩시 예진표 버튼 안보이기
preCheckBtn.hide();


var today = new Date();
let mChartDate = $('#mChartDate');
let mChartNo = $('#mChartNo');
let fn_date = (daySet) =>{
	var year = daySet.getFullYear();
	var month = ('0' + (daySet.getMonth() + 1)).slice(-2);
	var day = ('0' + daySet.getDate()).slice(-2);
	var dateString = `\${year}-\${month}-\${day}`;
	return dateString; //진료차트 날짜 셋팅
}

mChartDate.empty().append(fn_date(today));
let preOrderTable = $('#preOrderTable');

// 진료차트 저장 누르기
let saveChartBtn = $('#saveChartBtn').on('click', function(){
	let url = '/FinalPJ/medicalChart/insertChart';
	let diagnosis = {};
	diagnosis.diease = inputForm.eq(0).find('.selectDis').data('disease');

	let prescriptList = inputForm.eq(1).find('.selectedPrescript');
	let prescriptdata = [];
	$.each(prescriptList, function(idx, prescript){
		let medicine= $(prescript).data('medicine')
		let prescriptVO = {}
		prescriptVO.prescriptionNo = $(prescript).find('[name=prescriptionNo]').text();
		prescriptVO.prescriptionName = $(prescript).find('[name=prescriptionName]').text();
		prescriptVO.prescriptionEa = $(prescript).find('[name=prescriptionEa]').text();
		if(medicine['제품코드'] == prescriptVO.prescriptionNo) prescriptVO.prescriptionRoute = medicine['투여'];
		prescriptVO.prescriptionDay = $(prescript).find('[name=prescriptionDay]').val();
		prescriptVO.prescriptionTotal = $(prescript).find('[name=prescriptionTotal]').val();
		if(medicine['제품코드'] == prescriptVO.prescriptionNo) prescriptVO.prescriptionCost = Math.floor((medicine['상한금액'] * 1.5)/ 10) * 10;
		prescriptdata.push(prescriptVO);
	})

	let orderData = [];
	let selectOrderList = inputForm.eq(2).find('.selectOrderList');
	$.each(selectOrderList, function(idx, order){
		let surery = $(order).data('source');
		let selectTh = $(order).find('[name=orderKind]').text();

		let orderkind = "";
		switch(selectTh){
			case "x-Ray" : orderkind = 'O003'; break; case "MRI" : orderkind = 'O004'; break;
			case "물리치료" : orderkind = 'O001'; break; case "도수치료" : orderkind = 'O002'; break; 
			case "수술" : orderkind = surery.surgeryKindKey; break;}
		console.log("오더 종류 orderkind", orderkind)
		let orderHistoryVO = {}
		orderHistoryVO.orderKind = orderkind;
		orderHistoryVO.bodyPartKey = $(order).find('[name=bodyPartKey]').val();
		orderHistoryVO.equipmentKey = $(order).find('[name=equipmentKey]').val();
		orderData.push(orderHistoryVO); 
	})
	let setmChartNo = "C00006";
	let model = JSON.stringify({ "diagnosis" : diagnosis, "prescription" : prescriptdata
							, "orderHistory" : orderData , "mChartNo" : setmChartNo });
	//-------------ajax 보내기
	$.ajax({
		url : url
		, method : 'post'
		, dataType : 'text'
		, contentType: 'application/json; charset=utf-8'
		, data : model
		, beforeSend: function (xhr) {   /*데이터를 전송하기 전에 헤더에 csrf값을 설정한다*/
            xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
        }
		, success : function(resp){
			if(resp == '성공'){
				alert('진료차트 저장 완료')
				newChartNo = ""; // 차트번호 리셋
				settingChart();// 차트 rest
				// 환자의 상태를 해당 오더의 병과번호 대기중 상태로 변경하고 waiting 목록 다시 불러오기.
			}else{ alert('진료차트 저장 실패') }
		}
	})
});

let settingChart = () =>{
	// 상병 클릭버튼 생성, 목록 
	let makeTr = $('<tr>').append(
	$('<td>').html(`<i class="bx bx-plus-circle fs-22"></i>`).attr('colspan', 2))
		.attr({"data-bs-toggle" : "modal" , "data-bs-target" : "#addDisModal"});
	ck_disease.empty().append(makeTr)
	ck_mediList.empty().next().show();
	// 기존 오더 목록 비우기
	preOrderTable.empty(); 
	orderList.empty(); orderTable.show(); 
	mChartDate.empty().append(fn_date(today));
	// 신규차트 번호 
	mChartNo.empty().append(newChartNo); // 차트번호 보이기
	saveChartBtn.show(); closeChartBtn.hide();
}

let closeChartBtn = $('#closeChartBtn').on('click', function(){ settingChart(); }).hide();
let orderList = $('#orderList'); let orderTable = $('#orderTable');  let orderDiv = $('#orderDiv');

$(document).on('click', '.showPreChartBtn', function(){
	saveChartBtn.hide(); closeChartBtn.show();
	let preCTr = $(this).parents('.preCTr').data('source');

	mChartDate.empty().append(fn_date(new Date(preCTr.chartDate)));// 날짜 셋팅
	mChartNo.empty().append(preCTr.chartKey) // 차트번호 셋팅
	// 뽑아야 할것 - 진단 내역
	let dianosis = preCTr.dianosis;
	if(dianosis.diagnosisKey != null){
		ck_disease.empty().append($('<tr>').append($('<td>').html(dianosis.diease.diseaseKey), $('<td>').html(dianosis.diease.diseaseNmKr)));
	}else{
		ck_disease.empty().append(`<tr><td colspan='2'>해당 환자의 진단 내역이 없습니다.</td></tr>`);
	}
	// 처방 내역
	let prescriptList = preCTr.prescriptList;
	let PtrTags = []
	$.each(prescriptList, function(idx, prescript){
		if(prescript.prescriptionKey != null){
			let Ptrs = $('<tr>').append($('<td>').html(prescript.prescriptionNo)
				, $('<td>').html(prescript.prescriptionName)
				, $('<td>').html(prescript.prescriptionEa)
				, $('<td>').html(prescript.prescriptionDay)
				, $('<td>').html(prescript.prescriptionTotal)
				)
			PtrTags.push(Ptrs);
		}else {PtrTags = `<tr><td colspan='5'> 해당 환자의 처방 내역이 없습니다.</td></tr>`}
	})
	ck_mediList.empty().append(PtrTags); ck_mediList.next().hide(); // tfoot 안보이기

	// 오더 내역
	let orderHistoryList = preCTr.orderHistoryList;
	let OtrTags = `<thead><tr><th>오더번호</th><th>오더종류</th><th>치료부위/수술명</th><th>사용장비</th></tr></thead><tbody>`;
		$.each(orderHistoryList, function(idx, order){
			if(order.orderKey !=null){
				let orderKind = order.orderKind;
				let bodyPart = "";
				for(let i=0;  i < bodyListAll.length; i ++){
					if(order.bodyPartKey == bodyListAll[i]['code']) bodyPart =  "치료부위 : " + bodyListAll[i]['codeName'];
				}
				if(orderKind.startsWith('S') > 0) {
					orderKind = "수술예약"
					for(let i=0; i<surgeryListAll.length; i ++){
						if(order.orderKind == surgeryListAll[i]['surgeryKindKey']) bodyPart = '수술명 : ' + surgeryListAll[i]['surgeryKindName'];
					}
				}
				switch(orderKind){
					case "O001" : orderKind = "물리치료" ; break; case "O002" : orderKind = "도수치료" ; break;
					case "O003" : orderKind = "영상-XRAY"; break; case "O004" : orderKind = "영상-MRI"; break;
				}
				let equipmentName = order.equipmentName ?? "해당사항 없음"
				OtrTags += `<tr><td>\${order.orderKey}</td><td>\${orderKind}</td><td>\${bodyPart}</td><td>\${equipmentName}</td></tr></tbody>`;
			}else{OtrTags += `<tr><td colspan='4'>해당 환자의 오더 내역이 없습니다.<td></tr></tbody>`}
		})
		orderTable.hide(); preOrderTable.empty().append(OtrTags);
});

let PInfoTbody = $('#PInfoTbody');

$(document).on('click', '.xBg', function() {
	$(this).parents('.selectPtr').remove();
})
let newChartNo = null;
let preChartListTB = $('#preChartList');
let preChartDiv = $('#preChartDiv').hide();
let callBtn = $('.callBtn')
// 호출 버튼을 누르면 환자정보 조회 - 환자 접수번호 가져오기
$(document).on('click', '.callBtn', function(){
	$(this).attr('Class' , 'btn btn-success DisIngBtn').html('진료중');
	$('.callBtn').prop('disabled', true);// 호출버튼을 다시 찾아서 다른 호출 버튼 disabled 해주기
	let waiting = $(this).parents('.Wtr').data("waiting")
	let patient = waiting.receipt.patient;
	preChartDiv.show();
	preCheckBtn.data('patient', patient);
	preCheckBtn.show();

	let type = "";
	switch(patient.patientType){ case "PK01" : type= "VIP"; break; case "PK02" : type= "일반환자"; break; case "PK01" : type= "관심환자" ; break; };

	let Ptr =[ $('<tr>').append(
		$('<td>').html(patient.patientName)
		, $('<td>').html(patient.patientRegno1)
		, $('<td>').html(patient.patientAge)
		, $('<td>').html(type)
	).addClass('patientInfo').data('source', patient)
		, $('<tr>').append( $('<th>').html('증상'), $('<td colspan="3">').html(waiting.receipt.receiptReason)) ];
	PInfoTbody.empty().append(Ptr);
	
	//------------과거 진료차트
	$.ajax({
		url : "/FinalPJ/medicalChart/preChartList"
		, type : 'get'
		, dataType : 'json'
		, data : {"patientKey" : patient.patientKey}
		, success : function(resp){
			let preChartTags = [];
			if(resp.length > 0){
				$.each(resp, function(idx, preChart) {
					let preChartTrs = $('<tr>').append(
							$('<td>').html(preChart.receiptKey)
							, $('<td>').html(preChart.chartKey)
							, $('<td>').html(fn_date(new Date(preChart.chartDate)))
							, $('<td>').html($('<input:button>').addClass('btn btn-primary showPreChartBtn').html("조회"))
						).addClass('preCTr').data('source', preChart)
					preChartTags.push(preChartTrs)
				});
			}else{ preChartTags = `<tr><td colspan='3'>과거 진료차트 내역이 없습니다.</td></tr>`; }
			preChartListTB.empty().append(preChartTags);
		}
	})// ajax 끝

	// 해당환자의 진료차트번호 생성하는 것.
	let medicalChartVO = {};
	medicalChartVO.receiptKey = waiting.receiptKey; // 접수번호
	medicalChartVO.patientKey = patient.patientKey; // 환자번호
	medicalChartVO.empKey = "${authEmp.empKey }";  // 의사번호
	
	$.ajax({
		url : "/FinalPJ/medicalChart/createChartNo"
		, type : 'post'
		, contentType: 'application/json; charset=utf-8'
		, dataType : 'text'
		, data : JSON.stringify(medicalChartVO)
		, beforeSend: function (xhr) {  
            xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
        }
		,success : function(resp){
			newChartNo = resp; // 환자의 차트번호 생성
			mChartNo.empty().html(newChartNo); // 생성된 차트번호넣어주기
		}
	});
	

})


//------------------------------------------
let waitingTB = $('#waitingTB')
let getWaiting = () =>{
	$.ajax({
		url : "/FinalPJ/medicalChart/mywaitingList"
		, dataType : 'json'
		, type : 'get'
		, data : {"officeKey" : '${authEmp.officeKey}'}
		, success : function(resp){
			let waitingList = resp;
			let trTags = [];
			if(waitingList.length > 0){
				$.each(waitingList, function(idx, waiting){
					let patient = waiting.receipt.patient;
					// 대기환자 확인
					let trs = $('<tr>').append(
					$('<td>').html(idx+1)
					, $('<td>').html(patient.patientName)
					, $('<td>').html(waiting.waitingStatusName)
					, $('<td>').html($('<input:button>').addClass('btn btn-primary callBtn').html('호출'))
					).addClass('Wtr').data("source", patient).data("waiting",waiting)
					trTags.push(trs);
				});
			}else{ trTags = `<tr><td colspan='4'>대기중인 환자가 없습니다.</td></tr>`; }
			waitingTB.empty().append(trTags);
		}
	})
}
getWaiting();

// list 검색 조건
let fn_serchData = (arrDataList, sKey , sVal)=>{
	let searchList = [];
	if(sVal != null){
		if(arrDataList.length > 0){
			$.each(arrDataList, function(idx, data){
				if(arrDataList[idx][sKey].indexOf(sVal) != -1){
					searchList.push(arrDataList[idx]);
				}
			})
		} // if 끝
		return searchList;
	}else{ return arrDataList; } // 검색키워드가 없으면 전체 목록 출력
}

// 질병목록 출력-----------------------------------------------------------
let Dislist = $('#Dislist');
let fn_disease = (list) =>{
	let Dis_trTags = [];
	if(list.length > 0){
		$.each(list, function(i, diseaseData){
			let trs =  $('<tr>').append(
						$('<td>').html(diseaseData.diseaseKey)
						,$('<td>').html(diseaseData.diseaseNmKr)
			).addClass("Dtr").data("source", diseaseData);
			Dis_trTags.push(trs);
		});
	}else{
		Dis_trTags = `<tr><td colspan='2'>상병목록이 없습니다.</td></tr>`;
	}
	return Dislist.empty().append(Dis_trTags);
}

// 신체부위 출력-----------------------------------------------------------
let selectBodyPart = $('.selectBodyPart');
fn_bodyPartOpt = (list)=>{
	let bodyOpt = `<option value=''>치료부위 선택</option>`;
			if(list.length > 0){
				$.each(list, function(idx,body) {
					bodyOpt += `<option value='\${body.code}'>\${body.codeName}</option>`;
				})
			}
	return bodyOpt;
}

// 물리치료 종류 출력--------------------------------------------------------
let selectTherapy = $('.selectTherapy');
fn_therapyOpt = (list)=>{
	let therapyOpt = `<option value=''>치료종류 선택</option>`;
			if(list.length > 0){
				$.each(list, function(idx,therapyEq) {
					therapyOpt += `<option value='\${therapyEq.equipmentKey}'>\${therapyEq.equipmentName}</option>`;
				})
			}
	return therapyOpt;
}

//수술 종류 출력----------------------------------------------------------
let surgeryTB =  $('#surgeryTB'); 
fn_surgeyList = (list)=>{
	let S_trTags = [];
	if(list.length > 0){
		$.each(list, function(i, surgeryData){
			let trs = $('<tr>').append(
					$('<td>').html(surgeryData.surgeryKindKey)
					, $('<td>').html(surgeryData.surgeryKindName)
					, $('<td>').html(surgeryData.surgeryKindPrice)
				).addClass("Str").data("source", surgeryData);
			S_trTags.push(trs);
		});
	}else{
		S_trTags = `<tr><td colspan='3'>수술목록이 없습니다.</td></tr>`;
	}
	return surgeryTB.empty().append(S_trTags);
}


let bodyListAll = []; let diseaseListAll = []; let therapyEqListAll = [];
let surgeryListAll = []; let prescriptListAll = [];

let getinitList = ()=>{
	let url = "/FinalPJ/medicalChart/initList"
	$.ajax({
		url : url
		, type : 'get'
		, async:false
		, dataType : 'json'
		, success : function(resp){
			bodyListAll = resp.bodyList;
			diseaseListAll = resp.diseaseList;
			therapyEqListAll = resp.therapyEqList;
			surgeryListAll = resp.surgeryList;

			fn_bodyPartOpt(bodyListAll) // 신체부위 셋팅
			fn_therapyOpt(therapyEqListAll)// 물리치료 셋팅
		}
	}) // ajax
	
}
getinitList();// 초기셋팅

// 질병 검색어
let Dis_serchKeyWord = $('#Dis_serchKeyWord').on('keyup', function(){
	let word = $(this).val();
	let serchList = fn_serchData(diseaseListAll, 'diseaseNmKr', word);
	fn_disease(serchList);
})


//------------------진단내역 작성
let ck_disease = $('#ck_disease');

// 검색해서 tr을 선택했을 때
$(document).on('click', '.Dtr', function(){
	// 검색창 초기화
	let selectTd = $(this).find("td");
	let data = $(this).data('source');
	let code = selectTd.eq(0).text();
	let codeName = selectTd.eq(1).text();
	let makeTr = $('<tr>').append($('<td>').html(code)
		,$('<td>').html(codeName)
		,$('<td>').html(`<i class="bx bx-minus-circle fs-22" id='del_dis'></i>`)).addClass('selectDis').data('disease', data)
	ck_disease.empty().append(makeTr);
	Dis_serchKeyWord.val("");
	addDisModal.modal('hide')
});
// -버튼을 누르면
let del_dis = $(document).on('click', '#del_dis', function(){
	$(this).parents('.selectDis').empty(); // tr을 찾아서 지우고
	let makeTr = $('<tr>').append(
		$('<td>').html(`<i class="bx bx-plus-circle fs-22"></i>`).attr('colspan', 2))
			.attr({"data-bs-toggle" : "modal" , "data-bs-target" : "#addDisModal"});
	ck_disease.empty().append(makeTr)
})



//-------------------------------------------------------------------약물목록 조회
let page = 1; // 페이지 let perPage = 1000; // 데이터 건수 
let serviceKey = "hjrDSW8kN1sERV%2BtQKchOkMSP39IBxM4A4xXlZCClkyx409T4po1rJNFUCNT8D40KczhcuDeI11tEmMmgbvIkw%3D%3D"; // 서비스 키

// 약물목록 불러오기
let getMedicineList = ()=>{
	$.ajax({
			url: `http://api.odcloud.kr/api/15067459/v1/uddi:f5a51b29-f3ee-4a30-8b8e-ce1492561e23?page=\${page}&perPage=\${perPage}&serviceKey=\${serviceKey}`
			, method: 'GET'
			, dataType: 'json'
			, async : false
			, success: (resp) => {
				let data = resp.data;
				// medicineList라는 이름의 리스트를 localStorage에 저장한다.
				localStorage.setItem("medicineList", JSON.stringify(data));
			}
	})
}


// localStorage에 약물목록이 없다면
if (!localStorage.getItem('medicineList')) {
	getMedicineList();  // 비동기면 제어가 안 끝났는데 아래가 제어가 넘어감
}

let mediList = $('#mediList'); // 모달 약물 리스트 tbody

// 약물 목록 불러오기
let fn_medicine = (dataList)=>{
	 if (dataList == null) {
         dataList = JSON.parse(localStorage.getItem("medicineList"));
     } 
	 prescriptListAll = dataList;
	let trTags = [];
	 $.each(dataList, function (idx, medicine) {
         let tr =
             $('<tr>').append(
                 $('<td>').html(medicine['제품코드']),
                 $('<td>').html(medicine['제품명']),
                 $('<td>').html(medicine['투여'])
             ).addClass('medicneTr').data('medicine', medicine);
         trTags.push(tr);
     });
	return mediList.empty().append(trTags);
}
// 약물 검색
const regExp = /^[0-9]+$/;

//keyup 이벤트에서 검색 함수 호출
let searhMedicineInput = $('#searhMedicineInput');
searhMedicineInput.on('keyup', () => {
    let searchData = searhMedicineInput.val();
    searchMedicine(searchData);
});

function searchMedicine(searchData) {
    // 검색창 초기화
    if (searchData.length == 0 || searchData == null) {
        fn_medicine();
        return;
    }

    let result = [];
    let data = JSON.parse(localStorage.getItem("medicineList"));
    $.each(data, function (idx, medicine) {
        let target;
        if (regExp.test(searchData)) {
            //숫자로만 검색 --> 의약품코드 검색
            target = medicine['제품코드'].toString();
        } else {
            // 그외 --> 의약품명 검색
            target = medicine['제품명'];
        }
        if (target.indexOf(searchData) != -1) {
            result.push(medicine);
        }
    });
    fn_medicine(result);
}
let selectMedicineList = $('#selectMedicineList');
// 약물을 눌렀을때
$(document).on('click','.medicneTr', function(){
	let medicine = $(this).data('medicine');
	let trs =[ $('<tr>').append(
		$('<td>').html(medicine['제품코드']).attr('name', 'prescriptionNo')
		, $('<td>').html(medicine['제품명']).attr('name', 'prescriptionName'), $('<td>').html(medicine['단위']).attr('name', 'prescriptionEa')
		, $('<td>').append($('<input>').attr({'name' : 'prescriptionDay', 'type' : 'number', 'style' : 'width : 30px;'}))
		, $('<td>').append($('<input>').attr({'name' : 'prescriptionTotal', 'type' : 'number', 'style' : 'width : 30px;'}))
		, $('<td>').html(`<i class="bx bx-minus-circle fs-22 dels"></i>`)
	).addClass('selectedPrescript').data('medicine', medicine)];
	selectMedicineList.append(trs);
})
let ck_mediList = $('#ck_mediList')

// ck_PrescriptBtn 저장버튼 눌렀을때
let ck_PrescriptBtn = $('#ck_PrescriptBtn').on('click', function(){
	let trsArr = selectMedicineList.find('.selectedPrescript');
	ck_mediList.append(trsArr);
	addMedicineModal.modal('hide');
})

//----------------------------------------------------------수술 종류 목록

$(document).on('click', '#del_surgey', function(){
	$(this).parents('.Str_order').empty();
	let makeTr = $('<tr>').append(
		$('<td>').html(`<i class="bx bx-plus-circle fs-22"></i>`).attr('colspan', 2)
		).attr({"data-bs-toggle" : "modal" , "data-bs-target" : "#addsurgeryModal"});
	surgeryTBody.empty().append(makeTr)
});


let surgeryTBody = $('#surgeryTBody')
let Str =  $(document).on('click', '.Str', function() {
	let selectSurgery = $(this).data('source');
	let iconText = `<i class="bx bx-minus-circle fs-22" id='del_surgey'></i><br><i class='bx bx-check-circle fs-22 S_orderCk'></i>`
	let trs = [ $('<tr>').append(
		$('<td>').html(selectSurgery.surgeryKindKey), $('<td>').html(selectSurgery.surgeryKindName)
			,$('<td>').html(iconText)
			).addClass('Str_order').data('source', selectSurgery)];
	surgeryTBody.empty().append(trs);
	Sur_serchKeyWord.val(""); // 검색어 초기화
	addsurgeryModal.modal('hide');
})

let Sur_serchKeyWord = $("#Sur_serchKeyWord").on('keyup', function(){
	let word = $(this).val();
	let serchList = fn_serchData(surgeryListAll, 'surgeryKindName', word);
	fn_surgeyList(serchList);
});


// 내부 스크롤 바 - 제이쿼리가 안먹혀요
var myElement = document.getElementById('mySimplebar');
new SimpleBar(myElement, { autoHide: true });


var myDisbar = document.getElementById('Disbar');
new SimpleBar(myDisbar, { autoHide: true });


var myElement3 = document.getElementById('Medibar');
new SimpleBar(myElement3, { autoHide: true });

var myElement4 = document.getElementById('sugerybar');
new SimpleBar(myElement4, { autoHide: true });

var myElement5 = document.getElementById('waitingSimplebar');
new SimpleBar(myElement5, { autoHide: true });

var myElement6 = document.getElementById('cardbar');
new SimpleBar(myElement6, { autoHide: true });

</script>