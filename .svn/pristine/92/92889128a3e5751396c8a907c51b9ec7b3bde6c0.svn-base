package kr.or.ddit.emp.dao;

import java.util.List;

import org.apache.ibatis.annotations.Mapper;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;

import kr.or.ddit.vo.EmpVO;
import kr.or.ddit.vo.EmpVOWrapper;
import lombok.extern.slf4j.Slf4j;

@Mapper
public interface EmpDAO extends UserDetailsService {
	// 회원 추가
	
	// 회원목록 조회
	public List<EmpVO> selectEmpList();
	
	// 회원 한명 조회
	public EmpVO selectEmp(String empKey);
	
	// 회원 수정
	public int updateEmp(EmpVO vo);
	
	// 회원 삭제
	
	//------------------------------------
	// 직원  계정 id 조회 - 시큐리티
	public EmpVO selectEmpSecurity(String empId);
	
	@Override
	default UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
		
		/*
		 직무 job
		 원무과 j001 ROLE_ADMIN
		 의사 j002 ROLE_DOCTOR
		 간호사 j003 ROLE_USER
		 물리치료사 j004 ROLE_USER
		 도수치료사 j005 ROLE_USER
		 영상촬영 j006 ROLE_USER
		 */
		
		EmpVO emp = selectEmpSecurity(username);
		switch (emp.getEmpJob()) {
		case "J001": emp.setEmpRole("ROLE_ADMIN");
			break;
		case "J002": emp.setEmpRole("ROLE_DOCTOR");
		break;
		case "J003": emp.setEmpRole("ROLE_USER");
		break;
		case "J004": emp.setEmpRole("ROLE_USER");
		break;
		case "J005": emp.setEmpRole("ROLE_USER");
		break;
		case "J006": emp.setEmpRole("ROLE_USER");
		break;
		default:
			break;
		}
		
		System.out.println(emp.getEmpRole());
		System.out.println(emp.getEmpRole());
		System.out.println(emp.getEmpRole());
		System.out.println(emp.getEmpRole());
		System.out.println(emp.getEmpRole());
		
		return new EmpVOWrapper(emp);
	}
}