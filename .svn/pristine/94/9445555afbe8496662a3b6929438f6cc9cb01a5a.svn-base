<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://www.springframework.org/tags/form" prefix="form" %>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="security" %>
<script src="${cPath }/resources/js/ckeditor/ckeditor.js"></script>

<style type="text/css">
	#noticeBoardBtn{
		float: right;
		margin: 10px;
	}
	#noticeBoardSubmitBtn{
		margin: 10px;
		float: right;
	}
	#noticeBoardTB{
		text-align: center;

	}
	.page-item{w
		text-align: center;
	}
	.table {
		text-align: center;
		vertical-align: middle;
		font-size: 11px;
	}

	.table thead {
		background-color: #405189c7;
		color: white;
	}
	#goSubmitBtn
	,#noticeBoardDelBtn{
		float: right;
		margin-left: 2px;
	}
	#boardView{
		font-size: 12px;
		border: 1px solid lightgray;
		text-align: left;
		padding: 100px;
		border-left: none;
		border-right: none;
	}
	#boardView th{
		width:25%;
		text-align: center;
		background-color: #f2f2f2;
	}
	#myChart{
		width: 300px;
	}
</style>

<div class="grid-stack"> 
		<!-- 공지사항 게시판 위치 -->
		<div class="grid-stack-item item" gs-x="0" gs-y="0" gs-w="6" gs-h="5">
			<div class="grid-stack-item-content" id= "noticeBoardDivGrid" >
					<h5 id="boardNoticeTitle" style="float: left;">공지사항</h5>
					<br><hr>
					<div class="item-body">
						<security:authorize access="hasRole('ADMIN')"> 
							<button type="button" id="noticeBoardBtn" class="btn btn-outline-primary btn-sm" data-bs-toggle="modal" data-bs-target="#insertNoticeBoard">
								게시글 작성
							</button>
						</security:authorize><br>
					<div id="noticeBoardDivList">
						<table id="noticeBoardTB" class="table table-bordered">
							<thead  class="table">
								<tr>
									<th>게시물번호</th>
									<th>제목</th>
									<th>작성자</th>
									<th>조회수</th>
									<th>작성일</th>
								</tr>
							</thead>
							<tbody id="listBody">
								<!-- 공지사항 리스트 들어오는 위치 -->
							</tbody>
							<tfoot>
								
								<tr>
									<td colspan="5">
										<!--페이징 처리-->
										<nav aria-label="...">
											<ul id="pagingArea" style="display: inline-flex;" class="pagination pagination-sm">
											</ul>
										</nav>
									</td>
								</tr>
							</tfoot>
						</table>
					</div>
					<div id="noticeDetailpoint"></div>
				</div>
			</div>
		</div>		
		
		<!----------------------------------------------- noticeInsert 용 모달창 ----------------------------------------------------->
		<!-- 통계  -->
		    <div class="grid-stack-item item" gs-x="6" gs-y="0" gs-w="6" gs-h="5">
		      <div class="grid-stack-item-content">
		        <div class="chartSize" >
		          <canvas id="myChart" width="300px;"></canvas>
		        </div>
		        
		        <div style="margin-left:100px;">
		        	<br><br>
			        <input class="button" type="button" value="월별" onclick="f_chart1()" />
			        <input class="button" type="button" value="부위별" onclick="f_chart2()" />
			        <input class="button" type="button" value="연령별" onclick="f_chart3()" />
		        </div>
		      </div>
		    </div>
		
		<!-- Grids in modals -->
		<div class="modal fade" id="insertNoticeBoard" tabindex="-1" aria-labelledby="insertNoticeBoardLabel" aria-modal="true">
		    <div class="modal-dialog modal-lg">
		        <div class="modal-content">
		        	<div class="card">
		        		<div class="card-header" id="noticeCardHeader">
		        			<button style="float: right;" type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
		        			<h3>공지사항 작성</h3>
		        		</div>
		        		<div class="card-body">
		        			<form id="noticeBoardForm" method="post" action="${pageContext.request.contextPath}/noticeBoardInsert.do" enctype="multipart/form-data">
								<div class="form-floating mb-3">
									<div class="form-floating">
									  <input type="text" name="boardTitle" class="form-control" id="floatingTitle" placeholder="글제목을 입력하세요">
									  <label for="floatingTitle" >글제목</label>
									</div>
								</div>
								<!-- 로그인 한 직원의 name 들어가야 한다. -->
								<div class="form-floating mb-3">
									<div class="form-floating">
									  <input type="text" name="boardWriter" class="form-control" id="floatingWriter" placeholder="작성자를 입력하세요" readonly value="${authEmp.empName}">
									  <label for="floatingWriter">작성자</label>
									</div>
								</div>
							  	<h5>글내용</h5> 
							  	<input type="text" name="boardContent" id="boardContent">
								<!-- <div id="boardContent"></div> -->
							<input id="noticeBoardSubmitBtn" type="submit" value="작성하기" class="btn btn-primary btn-sm" >    
							</form>        	
		        		</div>
		        	</div>
		        </div>
		    </div>
		</div>
		<!------------------------------------------------------------------------------------------------------------------------->
		<!----------------------------------------------- noticeUpdate 용 모달창 ----------------------------------------------------->
		<!-- Grids in modals -->
		<div class="modal fade" id="updateNoticeBoard" tabindex="-1" aria-labelledby="updateNoticeBoardLabel" aria-modal="true">
		    <div class="modal-dialog modal-lg">
		        <div class="modal-content">
		        	<div class="card">
		        		<div class="card-header" id="noticeCardHeader">
		        			<button style="float: right;" type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
		        			<h3>공지사항 수정</h3>
		        		</div>
		        		<div class="card-body">
		        			<form id="noticeBoardModForm" method="post" action="${pageContext.request.contextPath}/noticeBoardInsert.do" enctype="multipart/form-data">
		        				<input type="hidden" >
								<div class="form-floating mb-3">
									<div class="form-floating">
									  <input type="text" name="boardTitle" class="form-control" id="modTitle" placeholder="글제목을 입력하세요">
									  <label for="floatingTitle">글제목</label>
									</div>
								</div>
								<!-- 로그인 한 직원의 name 들어가야 한다. -->
								<div class="form-floating mb-3">
									<div class="form-floating">
									  <input type="text" name="boardWriter" class="form-control" id="modWriter" placeholder="작성자를 입력하세요" readonly>
									  <label for="floatingWriter">작성자</label>
									</div>
								</div>
							  	<h5>글내용</h5> 
							  	<!-- <input type="text" name="boardContent" id="boardModContent"><br> -->
								<div id="boardModContent"></div>
							<input id="noticeBoardModSubmitBtn" type="submit" value="수정하기" class="btn btn-primary" >    
							</form>        	
		        		</div>
		        	</div>
		        </div>
		    </div>
		</div>
		<!------------------------------------------------------------------------------------------------------------------------->
		
		
</div>	<!-- 그리드 스택 끝-->


<form name="noticeSearchForm" method="post">
	<security:csrfInput/>
	<input type="hidden" name="page">
</form>

<script>
// CKEDITOR 사용하려면 넣어야 함. ----------------------------------------------------------
CKEDITOR.replace('boardContent',{
	uploadUrl: `${cPath}/upload/noticeBoard?${_csrf.parameterName}=${_csrf.token}`
	// ,filebrowserUploadUrl:`${cPath}/image?${_csrf.parameterName}=${_csrf.token}`
	, clipboard_handleImages : false
});
CKEDITOR.replace('boardModContent',{
	uploadUrl: `${cPath}/upload/noticeBoard?${_csrf.parameterName}=${_csrf.token}`
	// ,filebrowserUploadUrl:`${cPath}/image?${_csrf.parameterName}=${_csrf.token}`
	, clipboard_handleImages : false
});

//------------------------------------------------------------------------------------
// GridStack ----------------------------------------------------------------------
var grid = GridStack.init({});
//------------------------------------------------------------------------------------ 

// 통계------------------------------------------------------------------------------------
    var grid = GridStack.init({});
    $("tbody:not(.disable)").on("click", ".datatr", function (event) {
      $(this).siblings(".datatr").removeClass("active");
      $(this).toggleClass("active");
    });

    function f_chart1() {
      $.ajax({
        method: 'get',
        url: 'salesRevenue.csv',
        dataType: 'text',
        success: function (res) {
          myChart.data.datasets[0].data = res.split(','); // split은 배열 리턴
          myChart.data.labels = ['1월', '2월', '3월', '4월', '5월', '6월'];
          myChart.update(); // 랜더링
        },
        error: function (xhr, status, error) {
          // 요청이 실패하면 실행할 콜백 함수
        }
      });
    }
    function f_chart2() {
      $.ajax({
        method: 'get',
        url: 'test.csv',
        dataType: 'text',
        success: function (res) {
          myChart.data.datasets[0].data = res.split(','); // split은 배열 리턴
          myChart.data.labels = ['팔', '다리', '손가락', '발목', '어깨', '허리'];
          myChart.update(); // 랜더링
        },
        error: function (xhr, status, error) {
          // 요청이 실패하면 실행할 콜백 함수
        }
      });
    }
    function f_chart3() {
      $.ajax({
        method: 'get',
        url: 'test2.csv',
        dataType: 'text',
        success: function (res) {
          myChart.data.datasets[0].data = res.split(','); // split은 배열 리턴
          myChart.data.labels = ['10대', '20대', '30대', '40대', '50대', '60대'];
          myChart.update(); // 랜더링
        },
        error: function (xhr, status, error) {
          // 요청이 실패하면 실행할 콜백 함수
        }
      });
    }

    const ctx = document.querySelector('#myChart');

    var myChart = new Chart(ctx, {
      type: 'doughnut', // 이건 생성때만 되고 변경할때는 안됨!
      data: {
        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
        datasets: [
          {
            label: '# 작년',
            data: [0, 0, 0, 0, 0, 0],
            borderWidth: 1,
          },
        ],
      },
      options: {
        scales: {
          y: {
            beginAtZero: true,
          },
        },
      },
    });
// 통계------------------------------------------------------------------------------------


// 게시물 상세 조회용 ----------------------------------------------------------------------
const noticeBoardDiv = $("#noticeBoardDiv");
const noticeBoardDivGrid = $("#noticeBoardDivGrid");
let noticeBoardFormDiv = $('#noticeBoardFormDiv').hide();
let boardTitle = $('[name=boardTitle]');
let boardWriter = $('[name=boardWriter]');
let noticeBoardDivList = $('#noticeBoardDivList');
let boardNoticeTitle = $('#boardNoticeTitle'); let noticeHit = $('#noticeHit');
let noticeDetailpoint = $('#noticeDetailpoint');
let noticeBoardBtn = $('#noticeBoardBtn');
let noticeDetail = null;

// 게시글 상세보기
const fn_noticeDetail = (boardKey) => {
	$.getJSON("/FinalPJ/noticeBoardDetail.do", {'boardKey' : boardKey}).done(function(resp){
		let notice = resp;
		let date = notice.boardDate.substring(0,10);
		boardNoticeTitle.html("게시글 보기")
		noticeBoardDivList.hide();
		noticeBoardBtn.hide();
		let makeDetail = `<div id='noticeBoardFormDiv'><table class='table' id='boardView'><tbody><tr><th>글제목</th><td>\${notice.boardTitle}</td></tr><tr><th>작성일</th><td>\${date}</td></tr><tr><th>작성자</th><td>\${notice.empName}</td></tr><tr><th>조회수</th><td>\${notice.boardHit}</td></tr>
							<div id='boardDetailCont'><tr><td colspan='2'>\${notice.boardContent ?? "" }</td></tr></div></tbody></table>
							<input type="button" class='btn btn-primary btn-sm' value="목록으로" onclick='noticeListreload();'>
							<security:authorize access="hasRole('ADMIN')">
							<input type="button" class='btn btn-danger btn-sm' data-boardKey='\${boardKey}' id='noticeBoardDelBtn' value="삭제">
							<input type="button" class='btn btn-primary btn-sm' data-bs-toggle='modal' data-bs-target='#updateNoticeBoard' id='goSubmitBtn' data-boardKey='\${boardKey}' value="수정"></security:authorize></div>`;
		noticeDetail = notice;
		noticeDetailpoint.empty().append(makeDetail);
	}) // getJSON 끝
} // fn_noticeDetail 끝
//------------------------------------------------------------------------------------ 


// 상세보기에서 목록 다시 불러오기 ------------------------------------------------------------
const noticeListreload = () =>{
	boardNoticeTitle.html("공지사항");
	let noticeDetailCard = $("#noticeDetailCard");
	// noticeDetailCard.remove();
	noticeBoardFormDiv.empty();
	noticeBoardBtn.show();
	noticeList();
	noticeBoardDivList.show();
}

//------------------------------------------------------------------------------------ 


// 게시물 리스트 조회용 --------------------------------------------------------------------
const noticeList = () => {
	boardNoticeTitle.html("공지사항")
	noticeDetailpoint.empty();
	const listBody = $("#listBody");
	const pagingArea = $("#pagingArea");

  let fn_makeTr = function(notice) {
    let trs = $(`<tr onclick='fn_noticeDetail(\${notice.boardKey})'>`).append(
				$("<td>").html(notice.boardKey),
				$("<td>").html(notice.boardTitle),
				$("<td>").html(notice.empName),
				$("<td>").html(notice.boardHit),
				$("<td>").html(notice.boardDate)
				);
    return trs;
  };

  let noticeSearchForm = $("[name=noticeSearchForm]").on("submit", function(event) {
    event.preventDefault();

    let data = $(this).serialize();
    $.ajax({
      url: "/FinalPJ/noticeBoardList.do",
      data: data,
      dataType: "json",
      method : "post"
      
    }).done(function(resp, textStatus, jqXHR) {
      listBody.empty();
      pagingArea.empty();

      let trTags = [];
      if (resp.dataList.length > 0) {
    	  
    	  
        $.each(resp.dataList, function(idx, notice) {
          trTags.push(fn_makeTr(notice));
        });
        pagingArea.html(resp.pagingHTML);
      } else {
        trTags.push(
          $("<tr>").html(
            $("<td colspan='4'>").html("게시글이 없습니다.")
          )
        );
        pagingArea.html(resp.pagingHTML);
      }
      listBody.append(trTags);
    }).fail(function(jqXHR, status, error) {
      console.log(`상태코드 : ${status}, 에러메시지 : ${error}`);
    });
    return false;
  }).submit();

  // fn_paging 함수를 전역으로 선언
  window.fn_paging = function(page, event) {
    noticeSearchForm.find("[name=page]").val(page);
    noticeSearchForm.submit();
    noticeSearchForm.find("[name=page]").val("");
    return false;
  };
};

noticeList();

//------------------------------------------------------------------------------------ 

// 게시물 Insert용 ----------------------------------------------------------------------
let noticeInsertBtn = $("#noticeInsertBtn");
let noticeBoardForm = $("#noticeBoardForm");

noticeBoardForm.on("submit", function(event){
	event.preventDefault();
	let noticeData = {
			boardTitle : $("input[name=boardTitle]").val(),
			boardWriter : '${authEmp.empKey}',
			boardContent : CKEDITOR.instances.boardContent.getData()
	};
	console.log("check:",noticeData);
	$.ajax({
		method : "post",
		url : "/FinalPJ/noticeBoardInsert.do",
		data : JSON.stringify(noticeData),
		contentType: 'application/json; charset=utf-8',
		dataType : "text",
		beforeSend: function (xhr) {   /*데이터를 전송하기 전에 헤더에 csrf값을 설정한다*/
            xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
        },
		success : function(resp){
			if(resp == 'success'){
				Swal.fire('등록 성공!', '공지사항 게시글을 등록했습니다!', 'success');
				$('#insertNoticeBoard').modal('hide');
				noticeBoardForm[0].reset();
				noticeList();
			}else{
				Swal.fire('등록 실패!', '공지사항 게시글 등록에 실패했습니다!', 'error');
			}
			
		},
	    error: function (request, status, error) {
	        console.log("code: " + request.status)
	        console.log("message: " + request.responseText)
	        console.log("error: " + error);
	    }
	});	
	return false;
});



//------------------------------------------------------------------------------------ 	


// 게시물 수정 ---------------------------------------------------------------------------

$("#modTitle").val("");
$("#modWriter").val("");
CKEDITOR.instances.boardModContent.setData("");

let goSubmitBtn = $(document).on('click', '#goSubmitBtn', function(){
	let boardKey = $(this).data('boardkey');
	boardTitle.val(noticeDetail.boardTitle);
	boardWriter.val(noticeDetail.empName);

	CKEDITOR.instances.boardModContent.setData(noticeDetail.boardContent ?? "");
});

let noticeBoardModForm = $("#noticeBoardModForm").on("submit", function(event){
	event.preventDefault();
	let noticeModData = {
			boardKey : noticeDetail.boardKey,
			boardTitle : $('#modTitle').val(),
			boardWriter : '${authEmp.empKey}', 
			boardContent : CKEDITOR.instances.boardModContent.getData()
			
	};
	
	console.log("check:",noticeModData);
	
	$.ajax({
		method : "post",
		url : "/FinalPJ/noticeBoardUpdate.do",
		data : JSON.stringify(noticeModData),
		contentType: 'application/json; charset=utf-8',
		dataType : "text",
		beforeSend: function (xhr) {   
            xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
        },
		success : function(resp){
			if(resp == 'success'){
				Swal.fire('수정 성공!', '공지사항 게시글을 수정했습니다!', 'success');
				fn_noticeDetail(noticeModData.boardKey);
				$('#updateNoticeBoard').modal('hide');
				$("#modTitle").val("");
				$("#modWriter").val("");
				CKEDITOR.instances.boardModContent.setData("");
			}else{
				Swal.fire('수정 실패!', '공지사항 게시글 수정에 실패했습니다!', 'error');
			}
		},
	    error: function (request, status, error) {
	        console.log("code: " + request.status);
	        console.log("message: " + request.responseText);
	        console.log("error: " + error);
	    }
	});	
	
	return false;
	
})

//------------------------------------------------------------------------------------ 	

// 게시물 삭제 ---------------------------------------------------------------------------
	
let noticeBoardDelForm = $("#noticeBoardDelForm");
let noticeBoardDelBtn = $(document).on('click', '#noticeBoardDelBtn', function(){
	let delBoardKey = $(this).data('boardkey')
	console.log("delBoardKey=", delBoardKey);
	$.ajax({
		method : "get",
		url : "/FinalPJ/noticeBoardDelete.do",
		data : {"delBoardKey" : delBoardKey},
		dataType : "text",
		beforeSend: function (xhr) {  
            xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
        },
		success : function(resp){
			if(resp == 'success'){
				Swal.fire('삭제 성공!', '공지사항 게시글을 삭제했습니다!', 'success');
				noticeListreload();
			}else{
				Swal.fire('삭제 실패!', '공지사항 게시글 삭제에 실패했습니다!', 'error');
			}
		},
	    error: function (request, status, error) {
	        console.log("code: " + request.status);
	        console.log("message: " + request.responseText);
	        console.log("error: " + error);
	    }
	});	
});
//------------------------------------------------------------------------------------ 	
</script>