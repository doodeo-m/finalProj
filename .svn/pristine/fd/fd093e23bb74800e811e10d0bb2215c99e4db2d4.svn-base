<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<style>
	.grid-stack {
		height: 100hv;
	}
	.grid-stack-item {
		border-radius: 1rem;
	}

	.card {
		margin: 0;
		--vz-card-inner-border-radius: 1rem;
		background-color: white;
	}
	.card-header {
		border-radius: 30px;
		background-color: #405189;
		color: white;
	}
	.rtBtn {
		float: right;
	}
	.nav-tabs .nav-link.active {
		background-color: #405189;
		color: white;
	}
	input[type=file] {
		width: 300px;
	}
	#mySimplebar {
		border: 1px solid gray;
		width: 100%;
		max-height: 150px;
	}
	table {
		text-align: center;
	}
	.saveBtn {
		float: right;
	}
	video{
		width: 500px;
	}
	image{
		width: 500px;
	}
</style>

<div class="grid-stack"><!-- grid 시작 -->



	<div class="grid-stack-item card" gs-x="0" gs-y="0" gs-w="3" gs-h="3">
		<div class="card-header">x-ray 대기환자 조회</div>
		<div class="card-body">
			<div class="grid-stack-item-content">
				<table class="table table-bordered">
					<tbody id="waitingXrayTB"></tbody>
				</table>
			</div>
		</div>
	</div> <!-- x-Ray 대기환자 조회 -->


	<div class="grid-stack-item card" gs-x="0" gs-y="4" gs-w="3" gs-h="3">
		<div class="card-header">MRI 예약 목록</div>
		<div class="card-body">
			<div class="grid-stack-item-content">
				<table class="table table-bordered">
					<tbody id="waitingMRITB"></tbody>
				</table>
			</div>
		</div>
	</div> <!-- MRI 예약 목록 끝-->

	<div class="grid-stack-item card" gs-x="3" gs-y="0" gs-w="4" gs-h="6">
		<div class="card-header">환자 정보 및 예진표</div>
		<div class="card-body">
			<div class="grid-stack-item-content">
				<h4>- 환자 정보
					<button type="button" class="btn btn-success btn-sm rtBtn" id="preCheckBtn"
						data-bs-toggle="modal" data-bs-target="#preCheckModal">예진표확인</button>
				</h4>
				<table class="table table-bordered">
					<thead>
						<tr><th>이름</th><th>생년월일</th><th>나이</th><th>유형</th></tr>
					</thead>
					<tbody id="PInfoTbody">
						<tr> <td></td> <td></td><td></td> <td></td></tr>
						<tr><th>증상</th><td colspan="3"></td></tr>
					</tbody>
				</table>
				<hr>
				<p>과거 진료차트 목록</p>
				<div id="mySimplebar">
					<table class="table table-bordered">
						<thead>
							<th>접수번호</th>
							<th>차트번호</th>
							<th>작성일</th>
							<th>작성자</th>
						</thead>
						<tbody id="preChartList"></tbody>
					</table>
				</div>
				<hr>
				<h4>- 오더 내역
					<div id="orderDate" style="float: right; display: inline;">작성날짜 : <span
							id="mChartDate"></span></div>
				</h4>
				<div id="orderTables">
				</div>
			</div>
		</div>
	</div><!-- 환자정보 끝 -->


	<div class="grid-stack-item card" gs-x="8" gs-y="0" gs-w="5" gs-h="6">
		<div class="card-header">촬영업무</div>
		<div class="card-body">
			<div class="grid-stack-item-content">
				<div id="rsDiv"></div>
				<div id="workContent">
				<!-- Nav tabs -->
				<ul class="nav nav-tabs mb-3" role="tablist">
					<li class="nav-item">
						<a class="nav-link active" data-bs-toggle="tab" href="#xRayTab" role="tab"
							aria-selected="false">
							x-Ray
						</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" data-bs-toggle="tab" href="#MRITab" role="tab"
							aria-selected="false">
							MRI
						</a>
					</li>
				</ul>
				<!-- Tab panes -->
				<div class="tab-content  text-muted">
					<div class="tab-pane active" id="xRayTab" role="tabpanel">
							<form id="xRayForm" class="insertForms" method="post" enctype="multipart/form-data">
								<input type="hidden" value="" name="orderKey">
								<input type="hidden" value="" name="empKey">
								<input type="button" value="전송" id='saveXray' class="btn btn-success saveBtn"
									onclick="javascript:$(this).parent().submit();"><br>
								<h5>- 의료진 코멘트</h5>
								<br>
								<div id="coment">
									<textarea rows="5" cols="50" class="form-control" name="radCont"></textarea>
								</div>
								<br>
								<input class="form-control" multiple type="file" name="filename"><br>
							</form>
					</div>

					<div class="tab-pane" id="MRITab" role="tabpanel">
							<form id="MRIForm" class="insertForms" method="post" enctype="multipart/form-data">
								<input type="hidden" value="" name="orderKey">
								<input type="hidden" value="" name="empKey">
								<input type="button" value="전송" id='saveMRI' class="btn btn-success saveBtn"
									onclick="javascript:$(this).parent().submit();"><br>
								<h5>- 의료진 코멘트</h5>
								<br>
								<div id="coment">
									<textarea rows="5" cols="50" class="form-control" name="radCont"></textarea>
								</div>
								<br>
								<input class="form-control" multiple type="file" name="filename"><br>
							</form>
					</div>
				</div>
				</div>
			</div>
		</div>
	</div><!-- 촬영 자료 업로드 끝 -->

</div><!-- grid stack끝-->

<div id="resultDiv">
	<h4>- 영상 자료 결과 조회
		<input type="button" id="closeBtn" class="btn btn-danger rtBtn" value="닫기">
	</h4>
	<br>
	<div id="rsData"></div>
	<hr>
	<br>
	<p>- 의료진 코멘트</p>
	<textarea rows="5" cols="50" id="rsCont" class="form-control" readonly></textarea>
</div>


<!-- 예진표 Modal -->
<div class="modal fade" id="preCheckModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
	aria-labelledby="staticBackdropLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h1 class="modal-title fs-5" id="staticBackdropLabel">예진표</h1>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body" id="preDisModalBody">
				<table class="table table-bordered">
					<thead>
						<th>번호</th>
						<th>이름</th>
						<th>나이</th>
					</thead>
					<tbody id="preDisIngfoPatient"></tbody>
					<br>
				</table class="table table-bordered">
				<table class="table table-bordered">
					<tbody id="preDisInfotable"></tbody>
				</table>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
			</div>
		</div>
	</div>
</div>



<script>
// 그리드스택 생성
var grid = GridStack.init({});
let xRayWaitingList = []; // xray리스트
let MRIWaitingList = [];  // MRI리스트
let waitingXrayTB = $('#waitingXrayTB');
let waitingMRITB = $('#waitingMRITB');
let callBtn = $('.callBtn');
let preChartDiv = $('#preChartDiv').hide();
let empKey = $('[name=empKey]');
let PInfoTbody = $('#PInfoTbody');
let preChartListTB = $('#preChartList');
let saveBtn = $('.saveBtn').prop('disabled', true);
let orderChartNo = ""; // 해당 오더의 차트번호
let orderTables = $('#orderTables');
let workContent = $('#workContent');
let rsData = $('#rsData');
let radiologyData = null;
let resultDiv = $('#resultDiv').hide();
var today = new Date();
let orderDate = $('#orderDate').hide();
let mChartDate = $('#mChartDate'); let mChartNo = $('#mChartNo');
let fn_date = (daySet) => {
	var year = daySet.getFullYear();
	var month = ('0' + (daySet.getMonth() + 1)).slice(-2);
	var day = ('0' + daySet.getDate()).slice(-2);
	var dateString = `\${year}-\${month}-\${day}`;
	return dateString; //날짜 반환
}

let closeBtn = $(document).on('click', '#closeBtn', function(){
	rsData.empty(); resultDiv.hide();
	workContent.show();
})
let orderKey = $('[name=orderKey]');
let insertForms = $('.insertForms').on('submit', function (event) {
	event.preventDefault();
	let thisForm = $(this)[0];
	let formData = new FormData(thisForm);

	$.ajax({
		url: "/FinalPJ/radiology/UploadData"
		, data: formData
		, type: 'post'
		, dataType: 'text'
		, cache: false
		, beforeSend: function (xhr) {
			xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
		}
		, contentType: false
		, processData: false
		, success: function (resp) {
			console.log(resp)
			if(resp == 'success'){
				alert("파일 저장 성공!");
				thisForm.reset(); // input formdata 초기화
				saveBtn.prop('disabled', true); // 저장버튼 비활성화
			}
		}
	})
	return false;
})
let rsDiv = $('#rsDiv');
let rsCont = $('#rsCont');
let showResultBtn = $(document).on('click', '.resultBtn', function(){
	let radiology = $(this).data('radiology')
	$.ajax({
		url : '/FinalPJ/radiology/radiologyDataView'
		, data : {'attGroupNo' : radiology.attGroupNo}
		, dataType: 'json'
		, success : function(resp){
			let fileList = resp;
			let fileTags = []; let aTags = [];
			if(fileList.length > 0){
				$.each(fileList, function(idx, file){
					let filedata = "";
					let fileURL = `/FinalPJ\${file.attPath}/\${file.saveName}`
					if(file.attType.startsWith('image')){
						filedata = $('<img>').attr('src' , `\${fileURL}`);
					}else if(file.attType.startsWith('video')){
						filedata = $('<video>').attr('src',  `\${fileURL}`).prop('controls', true);
					}
					let atag = `<br><a href="\${fileURL}" download='\${file.orignName}'>\${file.orignName}</a>`;
					aTags.push(atag);
					fileTags.push(filedata);
				})
			}else{ fileTags = `<p>등록된 파일이 없습니다.</p>`}
			rsData.empty().append(fileTags,'<br>',aTags );
			rsDiv.empty().append(resultDiv.show());
			workContent.hide();
		}
	}) // ajax 끝
})
let DisIngBtn = $(document).on('click', '.DisIngBtn', function () {
	$(this).attr({ 'Class': 'btn btn-primary callBtn' }).html('호출');
	$(".callBtn").prop('disabled', false).css('background-color', '#405189');
})

// form태그에 orderkey setting 하고 전송버튼 활성화
$(document).on('click', '#checkOk', function () {
	let Btndata = $(this).data('orderkey');
	orderKey.val(Btndata);
	saveBtn.prop('disabled', false);
})


let getRadiologyData = (Key) => {
	$.ajax({
		url: "/FinalPJ/radiology/getradiologyData"
		, type: 'get'
		, dataType: 'json'
		, data: { "orderKey": Key }
		, async : false
		, success: function (resp) {
			radiologyData = resp;
			if (radiologyData.orderKey != null){
				return radiologyData;
			} else{
				return null;
			}
		}
	})
}


// 과거 차트 조회
$(document).on('click', '.showPreChartBtn', function () {
	let preCTr = $(this).parents('.preCTr').data('source');
	orderDate.show().css('font-size', '0.8rem');
	mChartDate.empty().append(fn_date(new Date(preCTr.chartDate)));// 날짜 셋팅
	mChartNo.empty().append(preCTr.chartKey) // 차트번호 셋팅
	let orderList = preCTr.orderHistoryList;
	let tableTags = [];
	// if(orderList.length > 0){
	$.each(orderList, function (idx, order) {
		if (order.orderKey != null) { // 오더리스트에 오더키가 있다면
			if (order.orderKind == "O003" || order.orderKind == "O004") {
				let bodyPartName = "";
				$.each(bodyListAll, function (i, body) {
					if (body.code == order.bodyPartKey) bodyPartName = body.codeName
				})
				// 오더의 종류가 xray나 MRI라면
				tableTags += `<table class="table table-bordered"><tbody><tr><th>차트번호</th>
								<td>\${order.chartKey}</td><th>오더번호</th><td>\${order.orderKey}</td></tr>
								<tr><th>촬영종류</th><td>\${order.equipmentName}</td><th>촬영부위</th>
								<td>\${bodyPartName}</td></tr></tbody></table>`;
				getRadiologyData(order.orderKey);// 데이터로 찾기
				// console.log("radiologyData=", radiologyData);
				rsCont.val(radiologyData.radCont);
				if (radiologyData.radRecode != null) {
					if (radiologyData.attGroupNo != null) {
						// 만약 해당 오더에 대한 파일 그룹번호가 있다면
						tableTags +=  `<button type="button" class="btn btn-success resultBtn">영상자료 조회</button>`;
					}
				} else {
					tableTags += `<br><button type="button" id='checkOk' data-orderKey='\${order.orderKey}' 
								class="btn btn-success btn-sm">영상자료 등록</button>`;
				}
			} else {
				tableTags += `<p>해당 차트에 촬영 오더가 없습니다.</p>`;
			}
		} else {
			tableTags += `<p>해당 차트에 촬영 오더가 없습니다.</p>`;
		}
	}); //each 끝
	orderTables.empty().append(tableTags);
	$('.resultBtn').data('radiology', radiologyData);
});


// 예진표 조회
let preDisIngfoPatient = $('#preDisIngfoPatient')
let preDisInfotable = $('#preDisInfotable')
let preCheckBtn = $('#preCheckBtn').on('click', function () {
	let patient = preCheckBtn.data('patient');
	let preDisagnosis = patient.preDiagnosis;

	let trTags1 = [];
	let preDiagnosisPregnancy = preDisagnosis.preDiagnosisPregnancy == 'N' ? '없음' : '있음';
	let tr1 = $('<tr>').append(
		$('<td>').html(patient.patientKey)
		, $('<td>').html(patient.patientName)
		, $('<td>').html(patient.patientAge))
	trTags1.push(tr1);

	let trTags2 = [];
	if (preDisagnosis.preDiagnosisKey != null) {
		let tr2 = [
			$('<tr>').append($('<th>').html("수술경험"), $('<td>').html(preDisagnosis.preDiagnosisExperience))
			, $('<tr>').append($('<th>').html("질환여부"), $('<td>').html(preDisagnosis.preDiagnosisDisease))
			, $('<tr>').append($('<th>').html("특이체질/알러지"), $('<td>').html(preDisagnosis.preDiagnosisAllergy))
			, $('<tr>').append($('<th>').html("임신여부"), $('<td>').html(preDiagnosisPregnancy))
			, $('<tr>').append($('<th>').html("병원선택 이유"), $('<td>').html(preDisagnosis.preDiagnosisChoice))
		]
		trTags2 = tr2;
	} else { trTags2 = `<tr><td colspan='2'>해당환자의 예진표가 등록되지 않았습니다.<td></tr>` }
	// 환자정보 입력 // 예진표 정보 입력
	preDisIngfoPatient.empty().append(trTags1); preDisInfotable.empty().append(trTags2);
}).hide();

$(document).on('click', '.callBtn', function () {
	$(this).attr('Class', 'btn DisIngBtn').html('진료중').css('background-color', '#62b897');
	$('.callBtn').prop('disabled', true).css('background-color', '#646a79');// 호출버튼을 다시 찾아서 다른 호출 버튼 disabled 해주기
	let waiting = $(this).parents('.Wtr').data("waiting")
	let patient = waiting.receipt.patient;
	let empName = waiting.receipt.empName;
	empKey.val(waiting.receipt.empKey)
	preChartDiv.show();
	preCheckBtn.data('patient', patient);
	preCheckBtn.show();

	let type = "";
	switch (patient.patientType) { case "PK01": type = "VIP"; break; case "PK02": type = "일반환자"; break; case "PK01": type = "관심환자"; break; };

	let Ptr = [$('<tr>').append(
		$('<td>').html(patient.patientName), $('<td>').html(patient.patientRegno1)
		, $('<td>').html(patient.patientAge), $('<td>').html(type)
	).addClass('patientInfo').data('source', patient)
		, $('<tr>').append($('<th>').html('증상'), $('<td colspan="3">').html(waiting.receipt.receiptReason))];
	PInfoTbody.empty().append(Ptr);

	//-----과거 진료차트
	$.ajax({
		url: "/FinalPJ/medicalChart/preChartList"
		, type: 'get'
		, dataType: 'json'
		, data: { "patientKey": patient.patientKey }
		, success: function (resp) {
			let preChartTags = [];
			if (resp.length > 0) {
				$.each(resp, function (idx, preChart) {
					let preChartTrs = $('<tr>').append(
						$('<td>').html(preChart.receiptKey)
						, $('<td>').html(preChart.chartKey)
						, $('<td>').html(fn_date(new Date(preChart.chartDate)))
						, $('<td>').html(empName)
						, $('<td>').html($('<input:button>').addClass('btn btn-primary showPreChartBtn').html("조회"))
					).addClass('preCTr').data('source', preChart)
					preChartTags.push(preChartTrs)
				});
			} else { preChartTags = `<tr><td colspan='3'>과거 진료차트 내역이 없습니다.</td></tr>`; }
			preChartListTB.empty().append(preChartTags);
		}
	})// ajax 끝
})

// 대기환자 테이블 생성
let waitingmakeTr = (listBody, list) => {
	let trTags = [];
	if (list.length > 0) {
		$.each(list, function (idx, waiting) {
			let patient = waiting.receipt.patient;
			let trs = $('<tr>').append(
				$('<td>').html(idx + 1)
				, $('<td>').html(patient.patientName)
				, $('<td>').html(waiting.waitingStatusName)
				, $('<td>').html($('<input:button>').addClass('btn btn-primary callBtn').html('호출'))
			).addClass('Wtr').data("source", patient).data("waiting", waiting)
			trTags.push(trs);
		});
	} else { trTags = `<tr><td colspan='4'>대기중인 환자가 없습니다.</td></tr>`; }
	return listBody.empty().append(trTags);
}

// 대기환자 목록 출력
let getWaiting = () => {
	$.ajax({
		url: "/FinalPJ/radiology/getWaitingList"
		, dataType: 'json'
		, type: 'get'
		, async: false
		, success: function (resp) {
			console.log(resp)
			let AllList = resp;
			$.each(AllList, function (idx, waitingList) {
				// 모든 리스트를 돌려서 receipt만 뽑고.. 그안의 mchart를 돌려서 접수가 오늘날짜 접수라면
				let receipt = waitingList.receipt
				let mChartList = receipt.mchartList;
				$.each(mChartList, function (id, mChart) {
					let orderList = mChart.orderHistoryList;
					$.each(orderList, function (i, order) {
						if (order.orderKind == 'O003') {
							xRayWaitingList.push(waitingList);
							waitingmakeTr(waitingXrayTB, xRayWaitingList);
						} else {
							MRIWaitingList.push(waitingList);
							waitingmakeTr(waitingMRITB, MRIWaitingList);
						}
					})

				})
			}); // AllList each end
			// console.log("xray=", xRayWaitingList)
			// console.log("MRI=", MRIWaitingList)
		}
	})
}
getWaiting();
let bodyListAll = [];
let getBodyList = () => {
	$.ajax({
		url: "/FinalPJ/radiology/getBodyPartList"
		, type: 'get'
		, dataType: 'json'
		, async: false
		, success: function (resp) {
			bodyListAll = resp;
		}
	})
}
getBodyList(); // 신체부위 조회

// 내부 스크롤 바 - 제이쿼리가 안먹혀요
var myElement = document.getElementById('mySimplebar');
new SimpleBar(myElement, { autoHide: true });
</script>